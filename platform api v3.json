{"x-samples-languages":["curl","node","javascript","java","swift","csharp"],"openapi":"3.0.1","info":{"title":"Platform API","version":"3.0"},"externalDocs":{"url":"https://docs.clover.com"},"servers":[{"url":"https://sandbox.dev.clover.com"}],"security":[{"ApiToken":[]}],"paths":{"/v3/merchants/{mId}":{"get":{"tags":["MERCHANTS"],"summary":"Get a single merchant","description":"","operationId":"merchant.GetMerchant","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employees, bankProcessing, externalMerchant, merchantBoarding, deviceBoarding, programExpress, hierarchy, shifts, orders, address, logos, owner, items, tags, tenders, payments, gateway, printers, modifierGroups, properties, tipSuggestions, openingHours, partnerApp, selfBoardingApplication, enterprises, equipment]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Merchant"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Update a merchant","description":"","operationId":"merchant.UpdateMerchant","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employees, bankProcessing, externalMerchant, merchantBoarding, deviceBoarding, programExpress, hierarchy, shifts, orders, address, logos, owner, items, tags, tenders, payments, gateway, printers, modifierGroups, properties, tipSuggestions, openingHours, partnerApp, selfBoardingApplication, enterprises, equipment]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Merchant"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/address":{"get":{"tags":["MERCHANTS"],"summary":"Get a merchant's address","description":"","operationId":"merchant.GetMerchantAddress","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}}},"deprecated":false}},"/v3/merchants/{mId}/gateway":{"get":{"tags":["MERCHANTS"],"summary":"Get a merchant's payment gateway configuration","description":"","operationId":"merchant.GetMerchantGateway","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Gateway"}}}}},"deprecated":false}},"/v3/merchants/{mId}/properties":{"get":{"tags":["MERCHANTS"],"summary":"Get a merchant's properties","description":"","operationId":"merchant.GetMerchantProperties","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantProperties"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Update merchant properties","description":"","operationId":"merchant.UpdateMerchantProperties","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantProperties"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/default_service_charge":{"get":{"tags":["MERCHANTS"],"summary":"Get default service charge for a merchant","description":"The Merchant's default service charge, set via the Setup App (https://www.clover.com/setupapp).","operationId":"merchant.GetDefaultServiceCharge","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServiceCharge"}}}}},"deprecated":false}},"/v3/merchants/{mId}/sync/{table}":{"get":{"tags":["MERCHANTS"],"summary":"Get a sync token (deprecated)","description":"","operationId":"sync.GetSyncToken","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"table","in":"path","description":"Table Name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":true}},"/v3/merchants/{mId}/tip_suggestions":{"get":{"tags":["MERCHANTS"],"summary":"Get all tip suggestions for a merchant","description":"","operationId":"merchant.GetTipSuggestions","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [percentage, name, id, enabled]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TipSuggestion"}}}}},"deprecated":false}},"/v3/merchants/{mId}/tip_suggestions/{tId}":{"get":{"tags":["MERCHANTS"],"summary":"Get a single tip suggestion","description":"","operationId":"merchant.GetTipSuggestion","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"tId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TipSuggestion"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Update a single tip suggestion","description":"","operationId":"merchant.UpdateTipSuggestion","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"tId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TipSuggestion"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/order_types":{"get":{"tags":["MERCHANTS"],"summary":"Get all order types for a merchant","description":"Merchants have the ability to create custom order types via the Setup App (https://www.clover.com/setupapp). These custom order types can be associated with a System Order Type (see /v3/merchants/{mId}/system_order_types). Custom Order Types can support items in all categories (filterCategories=false) or a subset of the merchant's categories (filterCategories=true and categories property contains the list of supported categories). Note that when expanding the categories for an order type, they will only be returned if this orderType only supports a subset of the categories (filterCategories=true). If the orderType supports all categories (filterCategories=false) then you should make a GET request to /v3/merchants/{mId}/categories.","operationId":"merchant.GetOrderTypes","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [id, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [hours, attributes, categories]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderType"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Create Order Type For Merchant","description":"","operationId":"merchant.CreateOrderType","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [hours, attributes, categories]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderType"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/order_types/{orderTypeId}":{"get":{"tags":["MERCHANTS"],"summary":"Get a single order type","description":"","operationId":"merchant.GetOrderType","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderTypeId","in":"path","description":"Order Type Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [hours, attributes, categories]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderType"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Update a single order type","description":"","operationId":"merchant.UpdateOrderType","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderTypeId","in":"path","description":"Order Type Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [hours, attributes, categories]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderType"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["MERCHANTS"],"summary":"Delete an order type","description":"","operationId":"merchant.DeleteOrderType","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderTypeId","in":"path","description":"Order Type Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/order_type_categories":{"post":{"tags":["MERCHANTS"],"summary":"Create or delete associations between order types and categories","description":"","operationId":"order.CreateOrDeleteOrderTypeCategories","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"delete","in":"query","description":"Setting this to `true` removes associations specified in the request body","schema":{"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderTypeCategory"}}}}},"deprecated":false}},"/v3/merchants/{mId}/system_order_types":{"get":{"tags":["MERCHANTS"],"summary":"Return a list of system order types","description":"Merchants can create custom Order Types via \"/v3/merchants/{mId}/order_types\". It is useful to associate these custom order types with particular system order types in order to group things functionally. For example, a merchant may have a \"Lunch Take-Out\" order type and a \"Dinner Take-Out\" order type. These two order types can be associated with the \"TAKE-OUT-TYPE\" system order type so that applications can understand that they are both take-out order types.","operationId":"merchant.GetSystemOrderTypes","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SystemOrderType"}}}}},"deprecated":false}},"/v3/merchants/{mId}/roles":{"get":{"tags":["MERCHANTS"],"summary":"Get all roles from a merchant","description":"","operationId":"role.GetRoles","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, systemRole, name, id, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employees]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Role"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Create a role","description":"","operationId":"role.CreateRole","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Role"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/roles/{roleId}":{"get":{"tags":["MERCHANTS"],"summary":"Get a single role","description":"","operationId":"role.GetRole","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"roleId","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employees]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Role"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Update a single role","description":"","operationId":"role.UpdateRole","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"roleId","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employees]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Role"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["MERCHANTS"],"summary":"Delete a role","description":"","operationId":"role.DeleteRole","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"roleId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/tenders":{"get":{"tags":["MERCHANTS"],"summary":"Get all tenders for a merchant","description":"","operationId":"pay.GetMerchantTenders","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, visible, merchantId, instruction, systemTenderId, label, id, labelKey, opensCashDrawer, deletedTime, enabled]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tender"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Adds a new tender","description":"Returns an object representing newly added merchant tender, with a generated ID.","operationId":"pay.CreateMerchantTender","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tender"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tender"}}}}},"deprecated":false}},"/v3/merchants/{mId}/tenders/{tenderId}":{"get":{"tags":["MERCHANTS"],"summary":"Get a single merchant tender","description":"","operationId":"pay.GetMerchantTender","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"tenderId","in":"path","description":"Tender Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tender"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Updates an existing tender","description":"Returns an object representing updated merchant tender.","operationId":"pay.UpdateMerchantTender","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"tenderId","in":"path","description":"Tender Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tender"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["MERCHANTS"],"summary":"Deletes an existing tender","description":"","operationId":"pay.DeleteMerchantTender","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"tenderId","in":"path","description":"Tender Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/opening_hours":{"get":{"tags":["MERCHANTS"],"summary":"Get a list this merchant opening hours","description":"","operationId":"merchant.GetAllMerchantOpeningHours","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HoursSet"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Create a set of merchant opening hours","description":"","operationId":"merchant.CreateMerchantOpeningHours","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HoursSet"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HoursSet"}}}}},"deprecated":false}},"/v3/merchants/{mId}/opening_hours/{hId}":{"get":{"tags":["MERCHANTS"],"summary":"Get a specific set of merchant opening hours","description":"","operationId":"merchant.GetMerchantOpeningHours","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"hId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HoursSet"}}}}},"deprecated":false},"post":{"tags":["MERCHANTS"],"summary":"Update a set of merchant opening hours","description":"","operationId":"merchant.UpdateMerchantOpeningHours","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"hId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HoursSet"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HoursSet"}}}}},"deprecated":false},"delete":{"tags":["MERCHANTS"],"summary":"Delete a set of merchant opening hours","description":"","operationId":"merchant.DeleteMerchantOpeningHours","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"hId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/devices":{"get":{"tags":["MERCHANTS"],"summary":"Get all devices provisioned to a merchant","description":"Returns a list of all devices that are provisioned to the a merchant. This list can be viewed from the Setup App on the merchant's device or web dashboard (https://www.clover.com/setupapp/m/{mId}/devices).","operationId":"device.GetMerchantDevices","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [serial, name, merchant.id, merchant.name, deviceTypeName, model, id, deleted_time, orderPrefix]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Device"}}}}},"deprecated":false}},"/v3/merchants/{mId}/devices/{deviceId}":{"get":{"tags":["MERCHANTS"],"summary":"Get a single device provisioned to a merchant","description":"Returns a single device that is provisioned to a merchant.","operationId":"device.GetMerchantDevice","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"deviceId","in":"path","description":"Device Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Device"}}}}},"deprecated":false}},"/v3/merchants/{mId}/cash_events":{"get":{"tags":["CASH"],"summary":"Get all cash events","description":"Retrieve all cash events for this merchant. Cash events can also be consumed by registering a Webhook callback. See https://docs.clover.com/build/webhooks/","operationId":"cash.GetAllCashEvents","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [employee.id, note, amountChange, employee.name, type, device.id, timestamp]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, device]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CashEvent"}}}}},"deprecated":false}},"/v3/merchants/{mId}/employees/{empId}/cash_events":{"get":{"tags":["CASH"],"summary":"Get all cash events for an employee","description":"Retrieve cash events filtered by employee ID. Cash events can also be consumed by registering a Webhook callback. See https://docs.clover.com/build/webhooks/","operationId":"cash.GetEmployeeCashEvents","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [employee.id, note, amountChange, employee.name, type, device.id, timestamp]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, device]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CashEvent"}}}}},"deprecated":false}},"/v3/merchants/{mId}/devices/{deviceId}/cash_events":{"get":{"tags":["CASH"],"summary":"Get all cash events for a device","description":"Retrieve cash events filtered by device ID. Cash events can also be consumed by registering a Webhook callback. See https://docs.clover.com/build/webhooks/","operationId":"cash.GetDeviceCashEvents","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"deviceId","in":"path","description":"Device Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [employee.id, note, amountChange, employee.name, type, device.id, timestamp]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, device]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CashEvent"}}}}},"deprecated":false}},"/v3/merchants/{mId}/customers.csv":{"get":{"tags":["CUSTOMERS"],"summary":"Get a list of customers in CSV format","description":"Gives information for every customer of a merchant by default.","operationId":"handlers.GetCustomersCsv","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [customerSince, firstName, lastName, emailAddress, phoneNumber, marketingAllowed, fullName, id, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [addresses, emailAddresses, phoneNumbers, cards, metadata]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}}},"deprecated":false}},"/v3/merchants/{mId}/customers":{"get":{"tags":["CUSTOMERS"],"summary":"Get a list of customers","description":"Gives information for every customer of a merchant by default.","operationId":"handlers.GetCustomers","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [customerSince, firstName, lastName, emailAddress, phoneNumber, marketingAllowed, fullName, id, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [addresses, emailAddresses, phoneNumbers, cards, metadata]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}}},"deprecated":false},"post":{"tags":["CUSTOMERS"],"summary":"Create a customer","description":"Creates an customer for a merchant. The request body cannot be null.","operationId":"handlers.CreateCustomer","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [addresses, emailAddresses, phoneNumbers, cards, metadata]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/customers/{customerId}":{"get":{"tags":["CUSTOMERS"],"summary":"Get a single customer","description":"Returns information for a single customer.","operationId":"handlers.GetCustomer","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [customerSince, firstName, lastName, emailAddress, phoneNumber, marketingAllowed, fullName, id, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [addresses, emailAddresses, phoneNumbers, cards, metadata]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}}},"deprecated":false},"post":{"tags":["CUSTOMERS"],"summary":"Update a customer","description":"Updates information for a single customer. Only specified fields are overwritten.","operationId":"handlers.UpdateCustomer","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [addresses, emailAddresses, phoneNumbers, cards, metadata]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["CUSTOMERS"],"summary":"Delete a customer","description":"Deletes a single customer from a merchant.","operationId":"handlers.DeleteCustomer","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/customers/{customerId}/phone_numbers":{"post":{"tags":["CUSTOMERS"],"summary":"Create a phone number for a customer","description":"Creates a phone number associated to a merchant's customer.","operationId":"handlers.CreateCustomerPhoneNumber","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PhoneNumber"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/customers/{customerId}/phone_numbers/{phoneId}":{"post":{"tags":["CUSTOMERS"],"summary":"Update a phone number for a customer","description":"Updates a merchant's customer's phone number.","operationId":"handlers.UpdateCustomerPhoneNumber","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}},{"name":"phoneId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PhoneNumber"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["CUSTOMERS"],"summary":"Delete a customer phone number","description":"Deletes a merchant's customer's phone number.","operationId":"handlers.DeleteCustomerPhoneNumber","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}},{"name":"phoneId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/customers/{customerId}/email_addresses":{"post":{"tags":["CUSTOMERS"],"summary":"Create an email address for a customer","description":"Creates an email address associated to a merchant's customer.","operationId":"handlers.CreateCustomerEmailAddress","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmailAddress"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/customers/{customerId}/email_addresses/{emailId}":{"post":{"tags":["CUSTOMERS"],"summary":"Update an email address for a customer","description":"Updates a merchant's customer's email address.","operationId":"handlers.UpdateCustomerEmailAddress","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}},{"name":"emailId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmailAddress"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["CUSTOMERS"],"summary":"Delete a customer email address","description":"Deletes a merchant's customer's email address.","operationId":"handlers.DeleteCustomerEmailAddress","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}},{"name":"emailId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/customers/{customerId}/addresses":{"post":{"tags":["CUSTOMERS"],"summary":"Create an address for a customer","description":"Creates an address associated to a merchant's customer.","operationId":"handlers.CreateCustomerAddress","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/customers/{customerId}/addresses/{addressId}":{"post":{"tags":["CUSTOMERS"],"summary":"Update an address for a customer","description":"Updates a merchant's customer's address.","operationId":"handlers.UpdateCustomerAddress","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}},{"name":"addressId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["CUSTOMERS"],"summary":"Delete a customer address","description":"Deletes a merchant's customer's address.","operationId":"handlers.DeleteCustomerAddress","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}},{"name":"addressId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/customers/{customerId}/cards":{"post":{"tags":["CUSTOMERS"],"summary":"Create a credit/debit card entry for a customer","description":"\"first6\" and \"last4\" fields are required.","operationId":"handlers.CreateCustomerCard","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Card"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/customers/{customerId}/cards/{cardId}":{"post":{"tags":["CUSTOMERS"],"summary":"Update a credit/debit card record for a customer","description":"","operationId":"handlers.UpdateCustomerCard","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}},{"name":"cardId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Card"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["CUSTOMERS"],"summary":"Delete a customer card","description":"","operationId":"handlers.DeleteCustomerCard","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}},{"name":"cardId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/customers/{customerId}/metadata":{"post":{"tags":["CUSTOMERS"],"summary":"Create note, birthday, business name for a customer","description":"Creates note, birthday, business name associated to a merchant's customer.","operationId":"handlers.CreateOrUpdateCustomerMetadata","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"customerId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerMetadata"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/employees":{"get":{"tags":["EMPLOYEES"],"summary":"Get all employees","description":"Gives information for every employee associated to a merchant by default. Accepts optional filter and expand query parameters.","operationId":"employee.GetEmployees","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, role, role.id, customId, name, nickname, id, deletedTime, deleted_time, email]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [roles, shifts]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Employee"}}}}},"deprecated":false},"post":{"tags":["EMPLOYEES"],"summary":"Create an employee","description":"Creates an employee for a merchant. Accepts optional expand parameters.","operationId":"employee.CreateEmployee","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [shifts, payments, orders, roles]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Employee"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/employees/{empId}":{"get":{"tags":["EMPLOYEES"],"summary":"Get a single employee","description":"Returns information for a single employee.  Accepts optional expand query parameters","operationId":"employee.GetEmployee","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [roles, shifts]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Employee"}}}}},"deprecated":false},"post":{"tags":["EMPLOYEES"],"summary":"Update an employee","description":"Updates information for a single employee. Accepts optional expand query params.","operationId":"employee.UpdateEmployee","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [shifts, payments, orders, roles]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Employee"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["EMPLOYEES"],"summary":"Delete an employee","description":"Deletes a single employee from a merchant, also can't delete the 'owner' employee.","operationId":"employee.DeleteEmployee","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/shifts":{"get":{"tags":["EMPLOYEES"],"summary":"Get all shifts","description":"","operationId":"merchant.GetAllShifts","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [employee.id, out_time, in_time, employee.name, in_and_override_time, out_and_override_time, id, has_in_time, override_in_time, deletedTime, server_banking]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, overrideInEmployee, overrideOutEmployee]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Shift"}}}}},"deprecated":false}},"/v3/merchants/{mId}/shifts/{shiftId}":{"get":{"tags":["EMPLOYEES"],"summary":"Get a single shift","description":"","operationId":"merchant.GetShift","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"shiftId","in":"path","description":"Employee Shift Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, overrideInEmployee, overrideOutEmployee]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Shift"}}}}},"deprecated":false}},"/v3/merchants/{mId}/shifts.csv":{"get":{"tags":["EMPLOYEES"],"summary":"Get .csv of all shifts","description":"","operationId":"merchant.GetAllShiftsCSV","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [employee.id, out_time, in_time, employee.name, in_and_override_time, out_and_override_time, id, has_in_time, override_in_time, deletedTime, server_banking]","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/employees/{empId}/shifts":{"get":{"tags":["EMPLOYEES"],"summary":"Get all shifts for an employee","description":"","operationId":"employee.GetEmployeeShifts","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [employee.id, out_time, in_time, employee.name, in_and_override_time, out_and_override_time, id, has_in_time, override_in_time, deletedTime, server_banking]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, overrideInEmployee, overrideOutEmployee]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Shift"}}}}},"deprecated":false},"post":{"tags":["EMPLOYEES"],"summary":"Create shift for an employee","description":"","operationId":"employee.CreateShift","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Shift"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/employees/{empId}/shifts/{shiftId}":{"get":{"tags":["EMPLOYEES"],"summary":"Get a single shift","description":"","operationId":"employee.GetEmployeeShift","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}},{"name":"shiftId","in":"path","description":"Employee Shift Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, overrideInEmployee, overrideOutEmployee]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Shift"}}}}},"deprecated":false},"post":{"tags":["EMPLOYEES"],"summary":"Update a single shift","description":"","operationId":"employee.UpdateShift","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}},{"name":"shiftId","in":"path","description":"Employee Shift Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, overrideInEmployee, overrideOutEmployee]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Shift"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["EMPLOYEES"],"summary":"Delete a single shift","description":"When sending a request, you must include an X-Clover-Account-Id header. The value of the header must be the ID of an employee with the permission to edit shifts.","operationId":"employee.DeleteShift","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}},{"name":"shiftId","in":"path","description":"Employee Shift Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/employees/{empId}/orders":{"get":{"tags":["EMPLOYEES"],"summary":"Get all orders for an employee","description":"","operationId":"employee.GetEmployeeOrders","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [lineItems, serviceCharge, discounts, credits, payments, customers, refunds]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [lineItems, serviceCharge, discounts, credits, payments, customers, refunds]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}}},"deprecated":false}},"/v3/merchants/{mId}/employee_cards":{"get":{"tags":["EMPLOYEES"],"summary":"Get all employee cards","description":"","operationId":"card.GetEmployeeCards","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [employee.id, number, modifiedTime, updater.id, createdTime, id, status]","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false},"post":{"tags":["EMPLOYEES"],"summary":"Create or update an employee card","description":"","operationId":"card.CreateOrUpdateEmployeeCard","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmployeeCard"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/employee_cards/{employeeCardId}":{"get":{"tags":["EMPLOYEES"],"summary":"Get a single employee card","description":"","operationId":"card.GetEmployeeCard","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"employeeCardId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["EMPLOYEES"],"summary":"Delete a single employee card","description":"","operationId":"card.DeleteEmployeeCard","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"employeeCardId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/items":{"get":{"tags":["INVENTORY"],"summary":"Get all inventory items","description":"","operationId":"inventory.GetItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, hidden, itemCode, tags.id, alternateName, option.id, isRevenue, modifierGroup.id, tags.name, deleted, item.id, price, name, id, sku, itemGroup.id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tags, categories, taxRates, modifierGroups, itemStock, options]","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create an inventory item","description":"","operationId":"inventory.CreateItem","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tags, categories, taxRates, modifierGroups, itemStock, options]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Item"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Bulk delete inventory items","description":"Deletes multiple inventory items in a single operation. Add a query string with the parameter itemIds and a comma-separated list of one or more itemId values.\n\nFor example, to delete three items at once, make a request like the following example:\n {merchantId}/items?itemIds=[itemId],[itemId],[itemId]","operationId":"inventory.BulkDeleteItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/items_no_revenue_class":{"get":{"tags":["INVENTORY"],"summary":"Get all inventory without a revenue class","description":"Get all inventory items which are not associated to any revenue class (that is, `showInReporting`is false or items which have no tags)","operationId":"inventory.GetItemsNoRevenueClass","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, hidden, itemCode, tags.id, alternateName, option.id, isRevenue, modifierGroup.id, tags.name, deleted, item.id, price, name, id, sku, itemGroup.id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tags, categories, taxRates, modifierGroups, itemStock, options]","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/items/{itemId}":{"get":{"tags":["INVENTORY"],"summary":"Get a single inventory item","description":"","operationId":"inventory.GetItem","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemId","in":"path","description":"Item Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tags, categories, taxRates, modifierGroups, itemStock, options]","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update an existing inventory item","description":"","operationId":"inventory.UpdateItem","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemId","in":"path","description":"Item Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tags, categories, taxRates, modifierGroups, itemStock, options]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Item"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete an inventory item","description":"","operationId":"inventory.DeleteItem","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemId","in":"path","description":"Item Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/bulk_items":{"put":{"tags":["INVENTORY"],"summary":"Update existing inventory items. ","description":"This API is to going to update only the changes present in the payload. Not going to replace the existing inventory items. Use the POST HTTP method to create inventory items. ","operationId":"inventory.BulkPatchInventoryItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InventoryItems"}}}},"responses":{"200":{"description":""}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create multiple inventory items.","description":"This API is to create multiple inventory items.  Use the PATCH HTTP method to update existing inventory items.","operationId":"inventory.BulkCreateInventoryItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InventoryItems"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/item_stocks":{"get":{"tags":["INVENTORY"],"summary":"Get the stock of all inventory items","description":"","operationId":"inventory.GetItemStocks","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/item_stocks/{itemId}":{"get":{"tags":["INVENTORY"],"summary":"Get the stock of an inventory item","description":"","operationId":"inventory.GetItemStock","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemId","in":"path","description":"Item Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update the stock of an inventory item","description":"","operationId":"inventory.UpdateItemStock","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemId","in":"path","description":"Item Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ItemStock"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete the stock of an inventory item","description":"","operationId":"inventory.DeleteItemStock","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemId","in":"path","description":"Item Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/item_groups":{"get":{"tags":["INVENTORY"],"summary":"Get all item groups","description":"Item groups allow merchants to create and manage large groups of related items. This is described to merchants as an 'Item with variants'.\n\nFor example, a merchant may sell a T-shirt that is available in various sizes and colors. Each of the T-shirt variations is an item and belongs to the T-shirt item group. Once an item group is created, it appears in Register as a single button, and tapping it brings up a choice of which variation is to be sold.\n\nBefore adding items to an item group, you first need to create the item group. Next, you create attributes (such as 'size' and 'color') and options for each attribute (such as 'small' and 'blue'). Then, you create the individual items and include the item group id to associate the items with the group. Finally, associate the options with an item.\n\nAn item can only belong to an item group if the item group id is specified when the item is created.\n\nThe name of an item which is a member of an item group is automatically generated by the Clover server as a combination of the item group name and the name of all the options associated with that item. It cannot be changed. If the item group name is changed, or if an option name is changed, then the item names will be automatically regenerated.\n\nAn item can only be a member of a single item group and once it is part of an item group it can never be removed or moved to another item group; it can only be deleted.","operationId":"inventory.GetItemGroups","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, name, id, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items, attributes]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ItemGroup"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create an item group","description":"","operationId":"inventory.CreateItemGroup","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items, attributes]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ItemGroup"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/item_groups/{itemGroupId}":{"get":{"tags":["INVENTORY"],"summary":"Get a single item group","description":"","operationId":"inventory.GetItemGroup","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemGroupId","in":"path","description":"Item Group Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items, attributes]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ItemGroup"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update an item group","description":"","operationId":"inventory.UpdateItemGroup","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemGroupId","in":"path","description":"Item Group Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items, attributes]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ItemGroup"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete an item group","description":"","operationId":"inventory.DeleteItemGroup","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemGroupId","in":"path","description":"Item Group Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/tags":{"get":{"tags":["INVENTORY"],"summary":"Get all tags","description":"Similarly to how they are described by wikipedia, tags are an informal way of establishing a relationship. Tags currently may be associated with items and printers. When an tag is associated with both an item and a printer that establishes a special relationship that results in those items being printed out on the associated printer when printing an order. Other than that special case there is no effect when an item is associated with a tag. Developers may use tags to establish a relationship meaningful for their needs.","operationId":"tag.GetTags","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, deleted, name, showInReporting, id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items, printers]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tag"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create a tag","description":"","operationId":"tag.CreateTag","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tag"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/tags/{tagId}":{"get":{"tags":["INVENTORY"],"summary":"Get a single tag","description":"","operationId":"tag.GetTag","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"tagId","in":"path","description":"Tag Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items, printers]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tag"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update a single tag","description":"","operationId":"tag.UpdateTag","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"tagId","in":"path","description":"Tag Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items, printers]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tag"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete a tag","description":"","operationId":"tag.DeleteTag","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"tagId","in":"path","description":"Tag Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/items/{itemId}/tags":{"get":{"tags":["INVENTORY"],"summary":"Get tags for a single item","description":"","operationId":"tag.GetItemTags","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemId","in":"path","description":"Item Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, deleted, name, showInReporting, id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items, printers]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tag"}}}}},"deprecated":false}},"/v3/merchants/{mId}/tags/{tagId}/items":{"get":{"tags":["INVENTORY"],"summary":"Get all items for a single tag","description":"","operationId":"tag.GetTaggedItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"tagId","in":"path","description":"Tag Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, hidden, itemCode, alternateName, option.id, isRevenue, modifierGroup.id, deleted, item.id, price, name, id, sku, itemGroup.id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items, printers]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Item"}}}}},"deprecated":false}},"/v3/merchants/{mId}/tag_items":{"post":{"tags":["INVENTORY"],"summary":"Create or delete associations between tags and items","description":"","operationId":"tag.CreateOrDeleteTagItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"delete","in":"query","description":"Setting this to `true` removes associations specified in the request body","schema":{"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagItem"}}}}},"deprecated":false}},"/v3/merchants/{mId}/tax_rates":{"get":{"tags":["INVENTORY"],"summary":"Get all tax rates","description":"","operationId":"taxrate.GetTaxRates","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [isDefault, rate, items.id, name, id, taxAmount, taxType]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaxRate"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create a tax rate for a merchant","description":"","operationId":"taxrate.CreateTaxRate","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaxRate"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaxRate"}}}}},"deprecated":false}},"/v3/merchants/{mId}/tax_rates/{taxId}":{"get":{"tags":["INVENTORY"],"summary":"Get a single tax rate","description":"","operationId":"taxrate.GetTaxRate","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"taxId","in":"path","description":"Tax Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaxRate"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update a single tax rate","description":"","operationId":"taxrate.UpdateTaxRate","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"taxId","in":"path","description":"Tax Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaxRate"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete a single tax rate","description":"","operationId":"taxrate.DeleteTaxRate","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"taxId","in":"path","description":"Tax Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/categories":{"get":{"tags":["INVENTORY"],"summary":"Get all categories","description":"Categories alter the user experience of the Register app. Items will appear in the Register app within the categories they are members of. Items may be associated with no, one or multiple categories. Items are displayed in Register in the order in which they are added to a category. Categories are displayed in Register using the sort order value for each category.","operationId":"category.GetCategories","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, deleted, sortOrder, name, id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [items]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create an item category","description":"","operationId":"category.CreateCategory","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [items]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/categories/{catId}":{"get":{"tags":["INVENTORY"],"summary":"Get a category","description":"","operationId":"category.GetCategory","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"catId","in":"path","description":"Category Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [items]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update a category","description":"","operationId":"category.UpdateCategory","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"catId","in":"path","description":"Category Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [items]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete a single item category","description":"","operationId":"category.DeleteCategory","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"catId","in":"path","description":"Category Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/categories/{catId}/items":{"get":{"tags":["INVENTORY"],"summary":"Get all items in a single category","description":"","operationId":"category.GetCategoryItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"catId","in":"path","description":"Category Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, deleted, sortOrder, name, id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [items]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Item"}}}}},"deprecated":false}},"/v3/merchants/{mId}/items/{itemId}/categories":{"get":{"tags":["INVENTORY"],"summary":"Get all categories of a single item","description":"","operationId":"category.GetItemCategories","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"itemId","in":"path","description":"Item Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, deleted, sortOrder, name, id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [items]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category"}}}}},"deprecated":false}},"/v3/merchants/{mId}/category_items":{"post":{"tags":["INVENTORY"],"summary":"Create or delete associations between items and categories","description":"","operationId":"category.CreateOrDeleteCategoryItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [items]","schema":{"type":"string"}},{"name":"delete","in":"query","description":"Setting this to `true` removes associations specified in the request body","schema":{"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CategoryItem"}}}}},"deprecated":false}},"/v3/merchants/{mId}/tax_rate_items":{"post":{"tags":["INVENTORY"],"summary":"Create or delete associations between items and tax rates","description":"","operationId":"taxrate.CreateOrDeleteTaxRateItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"delete","in":"query","description":"Setting this to `true` removes associations specified in the request body","schema":{"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaxRateItem"}}}}},"deprecated":false}},"/v3/merchants/{mId}/tax_rates/{taxId}/items":{"get":{"tags":["INVENTORY"],"summary":"Get items by tax rate","description":"","operationId":"taxrate.GetItemsByTaxRate","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"taxId","in":"path","description":"Tax Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, hidden, itemCode, tags.id, alternateName, option.id, isRevenue, modifierGroup.id, tags.name, deleted, item.id, price, name, id, sku, itemGroup.id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [items]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Item"}}}}},"deprecated":false}},"/v3/merchants/{mId}/modifier_groups":{"get":{"tags":["INVENTORY"],"summary":"Get all modifier groups","description":"These groupings are the categories different modifiers belong to. Modifier groups can be made available for specific inventory Items by creating an item to modifier group association.","operationId":"modifier.GetModifierGroups","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, category.id, negativeSortOrder, item.id, sortOrder, name, id, showByDefault]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [modifiers, items]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModifierGroup"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create a modifier group","description":"Create a new modifier group. Modifiers can be associated with a modifier group after it has been created.","operationId":"modifier.CreateModifierGroup","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [modifiers, items]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModifierGroup"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/modifier_groups/{modGroupId}":{"get":{"tags":["INVENTORY"],"summary":"Get a modifier group","description":"Get a single modifier group by it's UUID","operationId":"modifier.GetModifierGroup","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"modGroupId","in":"path","description":"Modifier Group Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [modifiers, items]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModifierGroup"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update a modifier group","description":"Update a modifier group. In order to add modifiers use the create modifiers endpoint.","operationId":"modifier.UpdateModifierGroup","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"modGroupId","in":"path","description":"Modifier Group Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [modifiers, items]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModifierGroup"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete a modifier group","description":"Delete an existing modifier group, identified by UUID. This also deletes all modifiers within that group.","operationId":"modifier.DeleteModifierGroup","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"modGroupId","in":"path","description":"Modifier Group Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/item_modifier_groups":{"post":{"tags":["INVENTORY"],"summary":"Create or delete associations between items and modifier groups","description":"Create or delete one or more association objects (item modifier groups). Modifiers can only be applied to items associated with that modifier's group. Learn more about object associations here: https://docs.clover.com/docs/using-object-associations","operationId":"modifier.CreateOrDeleteItemModifierGroups","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"delete","in":"query","description":"Setting this to `true` removes associations specified in the request body","schema":{"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ItemModifierGroup"}}}}},"deprecated":false}},"/v3/merchants/{mId}/modifier_group_sort_orders":{"post":{"tags":["INVENTORY"],"summary":"Update the priorities for a collection of up to 200 modifier groups at a time","description":"","operationId":"modifier.UpdateModifierGroupSortOrders","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModifierGroupArray"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/modifier_groups/{modGroupId}/layout":{"put":{"tags":["INVENTORY"],"summary":"Reorder modifiers in the modifier group based on the ordering of the incoming modifier id list. Remove deleted modifiers. Add missing modifiers.","description":"","operationId":"modifier.ReorderModifiers","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"modGroupId","in":"path","description":"Modifier Group Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdArray"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Reference"}}}}},"deprecated":false}},"/v3/merchants/{mId}/modifier_groups/{modGroupId}/items":{"get":{"tags":["INVENTORY"],"summary":"Get all items in a single modifier group","description":"","operationId":"modifier.GetModifierGroupItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"modGroupId","in":"path","description":"Modifier Group Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, hidden, itemCode, tags.id, alternateName, option.id, isRevenue, modifierGroup.id, tags.name, deleted, item.id, price, name, id, sku, itemGroup.id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tags, categories, taxRates, modifierGroups, itemStock, options]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Item"}}}}},"deprecated":false}},"/v3/merchants/{mId}/modifiers":{"get":{"tags":["INVENTORY"],"summary":"Get all modifiers","description":"Get all modifiers regardless of their modifier group.","operationId":"modifier.GetModifiers","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, price, name, alternateName, id, modifierGroup.id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [modifierGroup]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Modifier"}}}}},"deprecated":false}},"/v3/merchants/{mId}/modifier_groups/{modGroupId}/modifiers":{"get":{"tags":["INVENTORY"],"summary":"Get all modifiers belonging to a single modifier group","description":"Get an array containing the modifiers in a single modifier group.","operationId":"modifier.GetModifiersByGroup","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"modGroupId","in":"path","description":"Modifier Group Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, price, name, alternateName, id, modifierGroup.id]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [modifiers, items]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Modifier"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create a modifier","description":"Create a modifier object belonging to the modifier group identified in the URL.","operationId":"modifier.CreateModifier","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"modGroupId","in":"path","description":"Modifier Group Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [modifierGroup]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Modifier"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/modifier_groups/{modGroupId}/modifiers/{modId}":{"get":{"tags":["INVENTORY"],"summary":"Get a single modifier","description":"Get a single modifier by it's group, and it's UUID","operationId":"modifier.GetModifier","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"modGroupId","in":"path","description":"Modifier Group Id","required":true,"schema":{"type":"string"}},{"name":"modId","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [modifierGroup]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Modifier"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update a single modifier","description":"Update a modifier. Note that once it has been created, it is not possible to change a modifier's group.","operationId":"modifier.UpdateModifier","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"modGroupId","in":"path","description":"Modifier Group Id","required":true,"schema":{"type":"string"}},{"name":"modId","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable field: [modifierGroup]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Modifier"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete a single modifier","description":"Delete a single modifier by it's UUID","operationId":"modifier.DeleteModifier","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"modGroupId","in":"path","description":"Modifier Group Id","required":true,"schema":{"type":"string"}},{"name":"modId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/attributes":{"get":{"tags":["INVENTORY"],"summary":"Get all attributes","description":"See the description for 'get all item groups'.","operationId":"inventory.GetAttributes","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, name, id, deletedTime, itemGroup.id]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Attribute"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create an attribute","description":"","operationId":"inventory.CreateAttribute","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [options]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Attribute"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/attributes/{attributeId}":{"get":{"tags":["INVENTORY"],"summary":"Get a single attribute","description":"","operationId":"inventory.GetAttribute","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"attributeId","in":"path","description":"Attribute Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Attribute"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update a single attribute","description":"","operationId":"inventory.UpdateAttribute","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"attributeId","in":"path","description":"Attribute Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [options]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Attribute"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete a single attribute","description":"","operationId":"inventory.DeleteAttribute","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"attributeId","in":"path","description":"Attribute Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/options":{"get":{"tags":["INVENTORY"],"summary":"Get all options","description":"See the description for 'get all item groups'.","operationId":"inventory.GetOptions","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, item.id, name, attribute.id, id, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: []","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Option"}}}}},"deprecated":false}},"/v3/merchants/{mId}/attributes/{attributeId}/options":{"get":{"tags":["INVENTORY"],"summary":"Get all options with a given attribute","description":"","operationId":"inventory.GetOptionsByAttribute","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"attributeId","in":"path","description":"Attribute Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, item.id, name, attribute.id, id, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: []","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Option"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create an option","description":"","operationId":"inventory.CreateOption","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"attributeId","in":"path","description":"Attribute Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: []","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Option"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/attributes/{attributeId}/options/{optionId}":{"get":{"tags":["INVENTORY"],"summary":"Get an attribute and option by ID","description":"","operationId":"inventory.GetOptionById","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"attributeId","in":"path","description":"Attribute Id","required":true,"schema":{"type":"string"}},{"name":"optionId","in":"path","description":"Option Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, item.id, name, attribute.id, id, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: []","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Option"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update an option","description":"","operationId":"inventory.UpdateOption","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"attributeId","in":"path","description":"Attribute Id","required":true,"schema":{"type":"string"}},{"name":"optionId","in":"path","description":"Option Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: []","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Option"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete an option","description":"","operationId":"inventory.DeleteOption","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"attributeId","in":"path","description":"Attribute Id","required":true,"schema":{"type":"string"}},{"name":"optionId","in":"path","description":"Option Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/option_items":{"post":{"tags":["INVENTORY"],"summary":"Create or delete item/option association","description":"See the description for 'get all item groups'.","operationId":"inventory.CreateOrDeleteOptionItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"delete","in":"query","description":"Setting this to `true` removes associations specified in the request body","schema":{"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OptionItem"}}}}},"deprecated":false}},"/v3/merchants/{mId}/discounts":{"get":{"tags":["INVENTORY"],"summary":"Get all discounts","description":"","operationId":"inventory.GetDiscounts","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [amount, modifiedtime, percentage, id]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Discount"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Create a discount","description":"","operationId":"inventory.CreateDiscount","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Discount"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/discounts/{discountId}":{"get":{"tags":["INVENTORY"],"summary":"Get a single discount","description":"","operationId":"inventory.GetDiscount","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"discountId","in":"path","description":"Discount Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Discount"}}}}},"deprecated":false},"post":{"tags":["INVENTORY"],"summary":"Update an discount","description":"","operationId":"inventory.UpdateDiscount","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"discountId","in":"path","description":"Discount Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Discount"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["INVENTORY"],"summary":"Delete a discount","description":"","operationId":"inventory.DeleteDiscount","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"discountId","in":"path","description":"Discount Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/tax_rules":{"get":{"tags":["INVENTORY"],"summary":"Get all tax exemption rules","description":"Get a list of tax exemption rules which links order types to items in an order to exclude certain tax rates from those items","operationId":"taxrules.GetTaxRules","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaxRule"}}}}},"deprecated":false}},"/v3/merchants/{mId}/tax_rules/{taxRuleId}":{"get":{"tags":["INVENTORY"],"summary":"Get an individual tax exemption rule","description":"Returns the tax exemption rule specified in the request","operationId":"taxrules.GetTaxRule","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"taxRuleId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaxRule"}}}}},"deprecated":false}},"/v3/apps/{appId}/merchants/{mId}/notifications":{"post":{"tags":["NOTIFICATIONS"],"summary":"Create a notification for an app","description":"Push a message to all merchant devices that have your app installed and are listening for notifications.  For details on how to use Clover's Android SDK to receive notifications see: https://github.com/clover/android-examples/tree/master/pushnotificationexample","operationId":"apps.CreateMerchantAppNotification","parameters":[{"name":"appId","in":"path","description":"App Id","required":true,"schema":{"type":"string"}},{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppNotification"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/apps/{appId}/devices/{deviceId}/notifications":{"post":{"tags":["NOTIFICATIONS"],"summary":"Create a notification for a device","description":"Push a message to a device that has your app installed and is listening for notifications.  For details on how to use Clover's Android SDK to receive notifications see: https://github.com/clover/android-examples/tree/master/pushnotificationexample","operationId":"apps.CreateDeviceAppNotification","parameters":[{"name":"appId","in":"path","description":"App Id","required":true,"schema":{"type":"string"}},{"name":"deviceId","in":"path","description":"Device Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppNotification"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/atomic_order/orders":{"post":{"tags":["ORDERS"],"summary":"Create an atomic order","description":"This endpoint allows you to create a complete order with one request. The `OrderCart` contains most elements of an order, including line items, discounts, and tax rates. The returned Order object can be updated using other Order APIs.\n\nFor 400 Bad Request errors, the JSON response consists of two properties - `message` and `details`.\n\nFor specific cases, the `details` value is the UUID of the failed element. For example, if the server detects that an order-related element does not exist, the JSON response includes a `item_does_not_exist` message.\n\nSample error response with UUID: `response: {\"message\": \"item_does_not_exist\", \"details\": \"8NR072YTBZ52W\"}`\n\nTo fix this error, remove or replace the missing or invalid element from your request. For the following `message` values, the `details` value is the unrecognized UUID:\n- `item_does_not_exist`\n- `service_charge_does_not_exist`\n- `invalid_modifier`\n\nFor the following `message` values, the `details` value is a human-readable error message:\n- `cart_is_empty_or_missing`\n- `bad_request`\n- `order_uuid_is_null`\n- `insufficient_customer_info`\n- `invalid_discount_attribute` (the `details` value includes the incorrect attribute)","operationId":"order.CreateAtomicOrder","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderSubmitRequest"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}}},"deprecated":false}},"/v3/merchants/{mId}/atomic_order/checkouts":{"post":{"tags":["ORDERS"],"summary":"Checkout an atomic order","description":"The response includes order cart information, order total, and taxes.\n\nFor 400 Bad Request errors, the JSON response consists of two properties - `message` and `details`.\n\nFor specific cases, the `details` value is the UUID of the failed element. For example, if the server detects that an order-related element does not exist, the JSON response includes a `item_does_not_exist` message.\n\nSample error response with UUID: `response: {\"message\": \"item_does_not_exist\", \"details\": \"8NR072YTBZ52W\"}`\n\nTo fix this error, remove or replace the missing or invalid element from your request. For the following `message` values, the `details` value is the unrecognized UUID:\n- `item_does_not_exist`\n- `service_charge_does_not_exist`\n- `invalid_modifier`\n\nFor the following `message` values, the `details` value is a human-readable error message:\n- `cart_is_empty_or_missing`\n- `bad_request`\n- `order_uuid_is_null`\n- `insufficient_customer_info`\n- `invalid_discount_attribute` (the `details` value includes the incorrect attribute)","operationId":"order.CheckoutAtomicOrder","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderCheckoutRequest"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderCheckoutResponse"}}}}},"deprecated":false}},"/v3/merchants/{mId}/orders":{"get":{"tags":["ORDERS"],"summary":"Gets a list of orders","description":"Returns a list of orders. See https://docs.clover.com/build/working-with-orders/ for more details.","operationId":"order.GetOrders","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [employee.id, note, modifiedTime, orderType, touched, cardTransaction.last4, manualTransaction, employee.name, title, device.id, externalReferenceId, clientCreatedTime, total, payType, customer.id, testMode, createdTime, id, state, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, payments, refunds, credits, voids, payment.tender, payment.cardTransaction, lineItems, customers, serviceCharge, discounts, orderType, lineItems.discounts, lineItems.modifications]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}}},"deprecated":false},"post":{"tags":["ORDERS"],"summary":"Create an order","description":"The [atomic order endpoint](https://docs.clover.com/reference#ordercreateatomicorder) allows you to create an order with a single operation, and that endpoint is recommended for most uses.\n\nThis endpoint supports only basic order creation. Valid fields are limited to taxRemoved, note, title, state, testMode, manualTransaction, groupLineItems and orderType. Adding line items must be done in separate calls.","operationId":"order.CreateOrder","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}":{"get":{"tags":["ORDERS"],"summary":"Get a single order","description":"Returns a single order. See https://docs.clover.com/build/working-with-orders/ for more details. ","operationId":"order.GetOrder","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [lineItems, serviceCharge, discounts, credits, payments, customers, refunds]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}}},"deprecated":false},"post":{"tags":["ORDERS"],"summary":"Update an order","description":"","operationId":"order.UpdateOrder","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [lineItems, serviceCharge, discounts, credits, payments, customers, refunds]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["ORDERS"],"summary":"Delete an order","description":"","operationId":"order.DeleteOrder","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/discounts":{"get":{"tags":["ORDERS"],"summary":"Get all discounts for an order","description":"","operationId":"order.GetOrderDiscounts","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Discount"}}}}},"deprecated":false},"post":{"tags":["ORDERS"],"summary":"Create a discount on an order","description":"","operationId":"order.CreateDiscount","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Discount"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/discounts/{discountId}":{"delete":{"tags":["ORDERS"],"summary":"Delete an order discount","description":"","operationId":"order.RemoveOrderDiscount","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"discountId","in":"path","description":"Discount Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/line_items":{"get":{"tags":["ORDERS"],"summary":"Get all line items for an order","description":"","operationId":"order.GetOrderLineItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, orderType, discounts, modifications, taxRates, payments]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LineItem"}}}}},"deprecated":false},"post":{"tags":["ORDERS"],"summary":"Create a new line item","description":"Requests must include a price or inventory item id.","operationId":"order.CreateLineItem","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LineItem"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["ORDERS"],"summary":"Delete all the line items in an order","description":"","operationId":"order.DeleteLineItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/line_items/{lineItemId}":{"get":{"tags":["ORDERS"],"summary":"Get a line item","description":"","operationId":"order.GetOrderLineItem","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"lineItemId","in":"path","description":"Line Item Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, orderType, discounts, modifications, taxRates, payments]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LineItem"}}}}},"deprecated":false},"post":{"tags":["ORDERS"],"summary":"Update a line item","description":"","operationId":"order.UpdateOrderLineItem","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"lineItemId","in":"path","description":"Line Item Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [employee, orderType, discounts, modifications, taxRates, payments]","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LineItem"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["ORDERS"],"summary":"Void a line item","description":"","operationId":"order.DeleteOrderLineItem","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"lineItemId","in":"path","description":"Line Item Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/line_items/{lineItemId}/discounts":{"post":{"tags":["ORDERS"],"summary":"Create a discount on a line item","description":"","operationId":"order.CreateLineItemDiscount","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"lineItemId","in":"path","description":"Line Item Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Discount"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/line_items/{lineItemId}/discounts/{discountId}":{"delete":{"tags":["ORDERS"],"summary":"Delete a discount","description":"","operationId":"order.RemoveDiscount","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"lineItemId","in":"path","description":"Line Item Id","required":true,"schema":{"type":"string"}},{"name":"discountId","in":"path","description":"Discount Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/line_items/{lineItemId}/modifications":{"post":{"tags":["ORDERS"],"summary":"Apply a modification to a line item","description":"Create a modification, a record of a modifier as it exists at the time it is applied to the lineItem. To view current modifications use an 'expand=modifications' query parameter on the lineItem. To learn more about applying a modification see: https://docs.clover.com/build/working-with-orders/#add-item-modifiers","operationId":"order.ApplyModification","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"lineItemId","in":"path","description":"Line Item Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Modification"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/line_items/{lineItemId}/modifications/{modificationId}":{"delete":{"tags":["ORDERS"],"summary":"Remove a modification from a line item","description":"Delete a modification by UUID, removing the record of an applied modification","operationId":"order.RemoveModification","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"lineItemId","in":"path","description":"Line Item Id","required":true,"schema":{"type":"string"}},{"name":"modificationId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/bulk_line_items":{"post":{"tags":["ORDERS"],"summary":"Create multiple line items in bulk","description":"Each item must include a price for the request to succeed. The maximum number of line items per request is 100.","operationId":"order.BulkCreateLineItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLineItemsRequest"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/payments":{"get":{"tags":["PAYMENTS"],"summary":"Get all payments for an order","description":"","operationId":"pay.GetOrderPayments","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, voidReason, voidPaymentRef.id, cardTransaction.last4, cashTendered, device.id, voidPaymentRef.createdTime, externalReferenceId, result, offline, cardTransaction.transactionNo, voidPaymentRef.employeeId, paymentRefundId, merchantId, createdTime, externalPaymentId, voided, id, tender.id, deletedTime, employee.id, order.modifiedTime, amount, tipAmount, cardType, order.id, clientCreatedTime, customer.id, cardTransaction.captured, cardTransaction.currency, taxAmount, orderType.databaseId]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tender, germanInfo, lineItemPayments, cardTransaction, dccInfo, employee, refunds, transactionInfo, externalReferenceId, taxRates, appTracking, paymentAttributes, order]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payment"}}}}},"deprecated":false},"post":{"tags":["ORDERS"],"summary":"Create a payment record on an order","description":"The payment must include a positive amount and a valid tender ID. A merchant's tenders and their IDs can be retrieved from /v3/merchants/mId/tenders.","operationId":"order.CreatePaymentForOrder","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payment"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/service_charge/":{"post":{"tags":["ORDERS"],"summary":"Apply a service charge to an order","description":"The request body must include the merchant's service charge ID. This ID can be retrieved from /v3/merchants/mId/default_service_charge. Each request can set a different name and percentageDecimal as needed for an order.","operationId":"order.ApplyServiceCharge","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServiceCharge"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/service_charge/{chargeId}":{"delete":{"tags":["ORDERS"],"summary":"Remove service charge from an order","description":"","operationId":"order.RemoveServiceCharge","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"chargeId","in":"path","description":"Service Charge Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/voided_line_items":{"post":{"tags":["ORDERS"],"summary":"Void a line item","description":"","operationId":"order.VoidOrderLineItem","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidedLineItem"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/voided_line_items":{"get":{"tags":["ORDERS"],"summary":"Get order line items that were recorded after a void","description":"","operationId":"lineitem.GetVoidedOrderLineItems","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [reason, quantity, orderId, revenueClassName, deleteType, isRevenue, approvedByUuid, sortByName, printed, orderType.id, price, name, showInReporting, lineItemUuid, id, deletedTime]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidedLineItem"}}}}},"deprecated":false}},"/v3/merchants/{mId}/voided_line_items/totals":{"get":{"tags":["ORDERS"],"summary":"Get summary about line items and orders which were deleted","description":"","operationId":"handler.GetVoidedLineItemsTotals","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [reason, quantity, orderId, revenueClassName, deleteType, isRevenue, approvedByUuid, sortByName, printed, orderType.id, price, name, showInReporting, lineItemUuid, id, deletedTime]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoidedItemsSummary"}}}}},"deprecated":false}},"/v3/merchants/{mId}/orders/{orderId}/line_items/{oldLineItemId}/exchange/{lineItemId}":{"post":{"tags":["ORDERS"],"summary":"Create or exchange a line item","description":"","operationId":"order.SetOrderLineItem","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"orderId","in":"path","description":"Order Id","required":true,"schema":{"type":"string"}},{"name":"oldLineItemId","in":"path","description":"Old Line Item Id","required":true,"schema":{"type":"string"}},{"name":"lineItemId","in":"path","description":"Line Item Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LineItem"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/authorizations":{"get":{"tags":["PAYMENTS"],"summary":"Get all authorizations.","description":"An authorization is a promise by a card issuer that a merchant can charge the customer up to the specified amount in the future. These are typically created when a merchant uses the \"Bar Tabs\" app and \"Authorizations\" app.","operationId":"pay.GetAuthorizations","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [last4, note, amount, tabName, orderId, cardType, orderModifiedTime, type, device.id, token, result, authcode, externalReferenceId, closingPaymentId, merchantId, paymentId, createdTime, id, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [payment]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Authorization"}}}}},"deprecated":false},"post":{"tags":["PAYMENTS"],"summary":"Create an authorization on a Payment","description":"Authorization must reference a payment, have an amount greater than 0, and have a type.","operationId":"pay.CreateAuthorization","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Authorization"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Authorization"}}}}},"deprecated":false}},"/v3/merchants/{mId}/authorizations/{authId}":{"get":{"tags":["PAYMENTS"],"summary":"Get a single authorization","description":"","operationId":"pay.GetAuthorization","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"authId","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tender, germanInfo, lineItemPayments, cardTransaction, dccInfo, employee, refunds, transactionInfo, externalReferenceId, taxRates, appTracking, paymentAttributes, order]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Authorization"}}}}},"deprecated":false},"post":{"tags":["PAYMENTS"],"summary":"Update an authorization","description":"","operationId":"pay.UpdateAuthorization","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"authId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Authorization"}}}},"responses":{"200":{"description":""}},"deprecated":false},"delete":{"tags":["PAYMENTS"],"summary":"Delete an authorization","description":"","operationId":"pay.DeleteAuthorization","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"authId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/payments":{"get":{"tags":["PAYMENTS"],"summary":"Get all payments","description":"Retrieve payment information including total amount, tipAmount, taxAmount, and result status.","operationId":"pay.GetPayments","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, voidReason, voidPaymentRef.id, cardTransaction.last4, cashTendered, device.id, voidPaymentRef.createdTime, externalReferenceId, result, offline, cardTransaction.transactionNo, voidPaymentRef.employeeId, paymentRefundId, merchantId, createdTime, externalPaymentId, voided, id, tender.id, deletedTime, employee.id, order.modifiedTime, amount, tipAmount, cardType, order.id, clientCreatedTime, customer.id, cardTransaction.captured, cardTransaction.currency, taxAmount, orderType.databaseId]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tender, externalReferenceId, taxRates, germanInfo, lineItemPayments, cardTransaction, dccInfo, appTracking, paymentAttributes, refunds, order, transactionInfo]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payment"}}}}},"deprecated":false}},"/v3/merchants/{mId}/payments/{payId}":{"get":{"tags":["PAYMENTS"],"summary":"Get a single payment","description":"","operationId":"pay.GetPayment","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"payId","in":"path","description":"Payment Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tender, germanInfo, lineItemPayments, cardTransaction, dccInfo, employee, refunds, transactionInfo, externalReferenceId, taxRates, appTracking, paymentAttributes, order]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payment"}}}}},"deprecated":false},"post":{"tags":["PAYMENTS"],"summary":"Update a payment","description":"This endpoint can only be used to update the following information:\n1. `lineItemPayments`\n2. `employee.id` (if the payment is a preauth with `captured` currently set to `null)`.\n\nAll other properties in the request are ignored.","operationId":"pay.UpdatePayment","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"payId","in":"path","description":"Payment Id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payment"}}}},"responses":{"200":{"description":""}},"deprecated":false}},"/v3/merchants/{mId}/employees/{empId}/payments":{"get":{"tags":["PAYMENTS"],"summary":"Get all payments under an employee","description":"","operationId":"pay.GetEmployeePayments","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"empId","in":"path","description":"Employee Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [modifiedTime, voidReason, voidPaymentRef.id, cardTransaction.last4, cashTendered, device.id, voidPaymentRef.createdTime, externalReferenceId, result, offline, cardTransaction.transactionNo, voidPaymentRef.employeeId, paymentRefundId, merchantId, createdTime, externalPaymentId, voided, id, tender.id, deletedTime, employee.id, order.modifiedTime, amount, tipAmount, cardType, order.id, clientCreatedTime, customer.id, cardTransaction.captured, cardTransaction.currency, taxAmount, orderType.databaseId]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [tender, germanInfo, lineItemPayments, cardTransaction, dccInfo, employee, refunds, transactionInfo, externalReferenceId, taxRates, appTracking, paymentAttributes, order]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payment"}}}}},"deprecated":false}},"/v3/merchants/{mId}/refunds":{"get":{"tags":["PAYMENTS"],"summary":"Get all refunds for a merchant","description":"","operationId":"pay.GetRefunds","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [payment, germanInfo, appTracking, employee, overrideMerchantTender, serviceCharge, lineItems, transactionInfo]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Refund"}}}}},"deprecated":false}},"/v3/merchants/{mId}/refunds/{refundId}":{"get":{"tags":["PAYMENTS"],"summary":"Get a single refund","description":"","operationId":"pay.GetRefund","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"refundId","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [payment, germanInfo, appTracking, employee, overrideMerchantTender, serviceCharge, lineItems, transactionInfo]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Refund"}}}}},"deprecated":false}},"/v3/merchants/{mId}/credits":{"get":{"tags":["PAYMENTS"],"summary":"Get a list of credits","description":"","operationId":"pay.GetCredits","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"filter","in":"query","description":"Filter fields: [employee.id, order.modifiedTime, amount, cardType, order.id, failed, device.id, merchantTender.databaseId, externalReferenceId, result, clientCreatedTime, merchantId, id, tender.id, taxAmount, orderType.databaseId, deletedTime]","schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [dccInfo, germanInfo, appTracking, tender, employee, cardTransaction, order, taxRates, transactionInfo]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Credit"}}}}},"deprecated":false}},"/v3/merchants/{mId}/credits/{creditId}":{"get":{"tags":["PAYMENTS"],"summary":"Get a single credit","description":"","operationId":"pay.GetCredit","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"creditId","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [dccInfo, germanInfo, appTracking, tender, employee, cardTransaction, order, taxRates, transactionInfo]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Credit"}}}}},"deprecated":false}},"/v3/merchants/{mId}/credit_refunds":{"get":{"tags":["PAYMENTS"],"summary":"Get a list of credit refunds","description":"","operationId":"pay.GetCreditRefunds","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [credit, germanInfo, appTracking, transactionInfo]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Credit"}}}}},"deprecated":false}},"/v3/merchants/{mId}/credit_refunds/{crId}":{"get":{"tags":["PAYMENTS"],"summary":"Get a credit refund","description":"","operationId":"pay.GetCreditRefund","parameters":[{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"crId","in":"path","required":true,"schema":{"type":"string"}},{"name":"expand","in":"query","description":"Expandable fields: [credit, germanInfo, appTracking, transactionInfo]","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditRefund"}}}}},"deprecated":false}},"/v3/apps/{appId}/merchants/{mId}/billing_info":{"get":{"tags":["APPS"],"summary":"Get merchant app billing information","description":"Returns the status of a merchant's app billing including current subscription tier and trial status. Requires an OAuth generated token.","operationId":"apps.GetMerchantBillingInfo","parameters":[{"name":"appId","in":"path","description":"App Id","required":true,"schema":{"type":"string"}},{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppBillingInfo"}}}}},"deprecated":false}},"/v3/apps/{appId}/merchants/{mId}/metereds/{meteredId}":{"get":{"tags":["APPS"],"summary":"Get all events for an app metered event type","description":"Retrieves all billing events for app metered event types such as 'reservation'. Requires an OAuth generated token.See the documentation: https://docs.clover.com/clover-platform/docs/configuring-billing#section-metered-pricing","operationId":"apps.GetMerchantAppMeteredEvents","parameters":[{"name":"appId","in":"path","description":"App Id","required":true,"schema":{"type":"string"}},{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"meteredId","in":"path","description":"Metered Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppMeteredEvent"}}}}},"deprecated":false},"post":{"tags":["APPS"],"summary":"Create an app billing metered event","description":"Create an app billing metered event. Clover charges the merchant for each action they take on the app based on the amount specified on the app's Pricing & Distribution page.Pass \"count\" as a query parameter to bill the merchant for the number of metered events. \"count\" is ignored if you pass it in the request body.Otherwise \"count\" defaults to 1. Requires an OAuth generated token.See the documentation: https://docs.clover.com/clover-platform/docs/configuring-billing#section-metered-pricing","operationId":"apps.CreateMerchantAppMeteredEvent","parameters":[{"name":"appId","in":"path","description":"App Id","required":true,"schema":{"type":"string"}},{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"meteredId","in":"path","description":"Metered Id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppMeteredEvent"}}}}},"deprecated":false}},"/v3/apps/{appId}/merchants/{mId}/metereds/{meteredId}/events/{eventId}":{"get":{"tags":["APPS"],"summary":"Get an app billing metered event","description":"Returns the event details on a merchant's app billing metered event. Requires an OAuth generated token.See the documentation: https://docs.clover.com/clover-platform/docs/configuring-billing#section-metered-pricing","operationId":"apps.GetMerchantAppMeteredEvent","parameters":[{"name":"appId","in":"path","description":"App Id","required":true,"schema":{"type":"string"}},{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"meteredId","in":"path","description":"Metered Id","required":true,"schema":{"type":"string"}},{"name":"eventId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppMeteredEvent"}}}}},"deprecated":false},"delete":{"tags":["APPS"],"summary":"Delete app billing metered event","description":"Deletes an app metered event if the event was not already billed. Requires an OAuth generated token.","operationId":"apps.DeleteMerchantAppMeteredEvent","parameters":[{"name":"appId","in":"path","description":"App Id","required":true,"schema":{"type":"string"}},{"name":"mId","in":"path","description":"Merchant Id","required":true,"schema":{"type":"string"}},{"name":"meteredId","in":"path","description":"Metered Id","required":true,"schema":{"type":"string"}},{"name":"eventId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AppMeteredEvent"}}}}},"deprecated":false}}},"components":{"schemas":{"AppBundle":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"The name of the bundle"},"price":{"type":"integer","description":"DEPRECATED: Instead use per country pricing in bundleCountries","format":"int64"},"pricePerDevice":{"type":"integer","description":"DEPRECATED: Instead use per country pricing in bundleCountries","format":"int64"},"includedApps":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}},"bundleCountries":{"type":"array","description":"Bundle country options for this app bundle","items":{"$ref":"#/components/schemas/AppBundleCountry"}}}},"Address":{"type":"object","properties":{"address1":{"type":"string"},"address2":{"type":"string"},"address3":{"type":"string"},"city":{"type":"string"},"country":{"type":"string"},"phoneNumber":{"type":"string"},"state":{"type":"string"},"zip":{"type":"string"}}},"Customer":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"merchant":{"description":"The merchant that is associated with this customer","$ref":"#/components/schemas/Reference"},"firstName":{"type":"string","description":"First/given name of the customer"},"lastName":{"type":"string","description":"Last name/surname of the customer"},"marketingAllowed":{"type":"boolean"},"customerSince":{"type":"integer","format":"int64"},"orders":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}},"addresses":{"type":"array","items":{"$ref":"#/components/schemas/Address"}},"emailAddresses":{"type":"array","items":{"$ref":"#/components/schemas/EmailAddress"}},"phoneNumbers":{"type":"array","items":{"$ref":"#/components/schemas/PhoneNumber"}},"cards":{"type":"array","items":{"$ref":"#/components/schemas/Card"}},"metadata":{"description":"Additional information about the customer.","$ref":"#/components/schemas/CustomerMetadata"}}},"ServiceChargeAmount":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"amount":{"type":"integer","format":"int64"}}},"CashAdvanceCustomerIdentification":{"type":"object","properties":{"idType":{"type":"string","enum":["DRIVERS_LICENSE","PASSPORT","US_MILITARY_ID","US_RESIDENT","CONSULAR_ID","CANADIAN_CITIZEN","US_STATE_GOVT_ID","OTHER_ID"]},"serialNumber":{"type":"string","description":"Identification serial number"},"maskedSerialNumber":{"type":"string","description":"Masked identification serial number"},"encryptedSerialNumber":{"type":"string","description":"Encrypted identification serial number"},"expirationDate":{"type":"string","description":"Expiration date in format MMDDYYYY"},"issuingState":{"type":"string","description":"State in which identification was issued"},"issuingCountry":{"type":"string","description":"Country in which identification was issued"},"customerName":{"type":"string","description":"Full customer name"},"addressStreet1":{"type":"string"},"addressStreet2":{"type":"string"},"addressCity":{"type":"string"},"addressState":{"type":"string"},"addressZipCode":{"type":"string"},"addressCountry":{"type":"string"},"tellerID":{"type":"integer","description":"Employee id","format":"int32"}}},"InstallmentInfo":{"type":"object","properties":{"bill_pay_indicator":{"type":"string","enum":["Single","Recurring","Installment","Deferred"]},"invoice_number":{"type":"string","description":"Invoice number of the installment transaction"},"description":{"type":"string","description":"Description of the installment transaction"}}},"Item":{"required":["name","price"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"hidden":{"type":"boolean","description":"True if this item is hidden from Clover Register App","default":"false"},"itemGroup":{"description":"Reference to an item group","$ref":"#/components/schemas/Reference"},"options":{"type":"array","description":"List of options pertaining to this item's attribute variation","items":{"$ref":"#/components/schemas/Option"}},"name":{"type":"string","description":"Name of the item"},"alternateName":{"type":"string","description":"Alternate name of the item"},"code":{"type":"string","description":"Product code, e.g. UPC or EAN"},"sku":{"type":"string","description":"SKU of the item"},"price":{"type":"integer","description":"Price of the item, typically in cents; use priceType and merchant currency to determine actual item price. For non-VAT merchants, this field is exclusive of tax. For VAT merchants, this field is inclusive of tax.","format":"int64"},"priceType":{"type":"string","enum":["FIXED","VARIABLE","PER_UNIT"]},"defaultTaxRates":{"type":"boolean","description":"Flag to indicate whether or not to use default tax rates","default":"true"},"unitName":{"type":"string","description":"Unit name, e.g. oz, lb"},"cost":{"type":"integer","description":"Cost of the item to merchant, as opposed to customer price"},"isRevenue":{"type":"boolean","description":"True if this item should be counted as revenue. For example, gift cards and donations would not be counted as revenue.","default":"false"},"stockCount":{"type":"integer","description":"Deprecated, use itemStock instead."},"taxRates":{"type":"array","items":{"$ref":"#/components/schemas/TaxRate"}},"modifierGroups":{"type":"array","items":{"$ref":"#/components/schemas/ModifierGroup"}},"categories":{"type":"array","description":"Categories associated with this item","items":{"$ref":"#/components/schemas/Category"}},"tags":{"type":"array","description":"Tags associated with this item","items":{"$ref":"#/components/schemas/Tag"}},"canonical":{"description":"Reference to canonical items","$ref":"#/components/schemas/Reference"},"itemStock":{"description":"Item stock attribute that can be expanded to show stock quantity","$ref":"#/components/schemas/ItemStock"},"modifiedTime":{"type":"integer"},"deletedTime":{"type":"integer","description":"Timestamp when item was last deleted"},"priceWithoutVat":{"type":"integer","description":"The price without value-added tax (VAT). For non-VAT merchants, this field is ignored. For VAT merchants, this field is the base price of an item."}}},"GermanInfo":{"type":"object","properties":{"cardTrack2":{"type":"string"},"cardSequenceNumber":{"type":"string"},"transactionCaseGermany":{"type":"string"},"transactionTypeGermany":{"type":"string"},"terminalID":{"type":"string"},"traceNumber":{"type":"string"},"oldTraceNumber":{"type":"string"},"receiptNumber":{"type":"string"},"transactionAID":{"type":"string"},"transactionMSApp":{"type":"string"},"transactionScriptResults":{"type":"string"},"receiptType":{"type":"string"},"customerTransactionDOLValues":{"type":"string"},"merchantTransactionDOLValues":{"type":"string"},"merchantJournalDOL":{"type":"string"},"merchantJournalDOLValues":{"type":"string"},"configMerchantId":{"type":"string"},"configProductLabel":{"type":"string"},"hostResponseAidParBMP53":{"type":"string"},"hostResponsePrintDataBM60":{"type":"string"},"sepaElvReceiptFormat":{"type":"string"},"sepaElvExtAppLabel":{"type":"string"},"sepaElvPreNotification":{"type":"string"},"sepaElvMandate":{"type":"string"},"sepaElvCreditorId":{"type":"string"},"sepaElvMandateId":{"type":"string"},"sepaElvIban":{"type":"string"}}},"TransactionSettings":{"type":"object","properties":{"cardEntryMethods":{"type":"integer","format":"int32"},"disableCashBack":{"type":"boolean","default":"false"},"cloverShouldHandleReceipts":{"type":"boolean","default":"true"},"forcePinEntryOnSwipe":{"type":"boolean","default":"false"},"disableRestartTransactionOnFailure":{"type":"boolean","default":"false"},"allowOfflinePayment":{"type":"boolean","default":"false"},"approveOfflinePaymentWithoutPrompt":{"type":"boolean","default":"false"},"forceOfflinePayment":{"type":"boolean","default":"false"},"signatureThreshold":{"type":"integer","format":"int64"},"signatureEntryLocation":{"type":"string","enum":["ON_SCREEN","ON_PAPER","NONE"]},"tipMode":{"type":"string","enum":["TIP_PROVIDED","ON_SCREEN_BEFORE_PAYMENT","ON_SCREEN_AFTER_PAYMENT","ON_PAPER","NO_TIP"]},"tippableAmount":{"type":"integer","format":"int64"},"disableReceiptSelection":{"type":"boolean","default":"false"},"disableDuplicateCheck":{"type":"boolean","default":"false"},"autoAcceptPaymentConfirmations":{"type":"boolean","description":"If set to true, confirmation requests triggered by a challenge at the payment gateway are automatically accepted, and confirmation requests are not transmitted back to the calling program. Be sure you are willing to accept the risk associated with accepting offline or duplicate payment challenges. See https://docs.clover.com/build/working-with-challenges for more information.","default":"false"},"autoAcceptSignature":{"type":"boolean","default":"false"},"returnResultOnTransactionComplete":{"type":"boolean","default":"false"},"tipSuggestions":{"type":"array","items":{"$ref":"#/components/schemas/TipSuggestion"}},"regionalExtras":{"type":"object","properties":{"default":{"type":"string"}}},"disableCreditSurcharge":{"type":"boolean","default":"false"}}},"CustomerMetadata":{"type":"object","properties":{"businessName":{"type":"string","description":"The name of the business the customer is associated with."},"note":{"type":"string","description":"A note about the customer."},"dobYear":{"type":"integer","description":"The year part of the date of birth for this customer. This part of the date of birth is optional, i.e., it's possible that only dobMonth and dobDay are populated.","format":"int32"},"dobMonth":{"type":"integer","description":"The month part of the date of birth for this customer.","format":"int32"},"dobDay":{"type":"integer","description":"The day part of the date of birth for this customer.","format":"int32"},"modifiedTime":{"type":"integer","description":"The timestamp from when this customer's data was last updated.","format":"int64"},"customer":{"description":"Customer who this metadata belongs to.","$ref":"#/components/schemas/Reference"}}},"CashEvent":{"type":"object","properties":{"type":{"type":"string","description":"The type of event that occurred","enum":["LOAD","TRANSACTION","OPEN","ADJUSTMENT","COUNT","UNLOAD"]},"amountChange":{"type":"integer","description":"The amount that was either added, removed of modified by the event","format":"int64"},"timestamp":{"type":"integer","description":"Time at which the event was executed"},"note":{"type":"string","description":"Any additional information regarding the event"},"employee":{"description":"The employee who performed the event","$ref":"#/components/schemas/Employee"},"device":{"description":"The device that initiated the event","$ref":"#/components/schemas/Device"},"merchant":{"description":"The event occurred for this merchant.","$ref":"#/components/schemas/Reference"}}},"IdentityDocument":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"type":{"type":"string","description":"Type of personal identification: National Document, Passport, etc"},"number":{"type":"string","description":"The identification number"},"createdTime":{"type":"integer","description":"Created timestamp.","format":"int64"},"modifiedTime":{"type":"integer","description":"Modified timestamp.","format":"int64"},"deletedTime":{"type":"integer","description":"Deleted timestamp.","format":"int64"},"payment":{"$ref":"#/components/schemas/Reference"}}},"PromotionalMessage":{"type":"object","properties":{"message":{"type":"string"},"showOnMerchantReceipt":{"type":"boolean"},"showOnCustomerReceipt":{"type":"boolean"},"showOnDisplay":{"type":"boolean"}}},"CashAdvanceExtra":{"type":"object","properties":{"cashAdvanceSerialNum":{"type":"string"},"cashAdvanceCustomerIdentification":{"$ref":"#/components/schemas/CashAdvanceCustomerIdentification"}}},"EmailAddress":{"required":["emailAddress"],"type":"object","properties":{"id":{"type":"string"},"emailAddress":{"type":"string"},"verifiedTime":{"type":"integer","format":"int64"},"primaryEmail":{"type":"boolean"},"customer":{"description":"Customer who this email address belongs to.","$ref":"#/components/schemas/Reference"}}},"Card":{"required":["first6","last4"],"type":"object","properties":{"id":{"type":"string"},"first6":{"type":"string"},"last4":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"expirationDate":{"type":"string"},"additionalInfo":{"type":"object","properties":{"default":{"type":"string"}}},"cardType":{"type":"string"},"token":{"type":"string"},"tokenType":{"type":"string","enum":["MULTIPAY","FINANCIAL","CTOKEN"]},"modifiedTime":{"type":"integer","description":"The timestamp from when this card was last updated.","format":"int64"},"customer":{"description":"Customer who this card belongs to.","$ref":"#/components/schemas/Reference"}}},"AppBundleCountry":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"price":{"type":"integer","format":"int64"},"pricePerDevice":{"type":"integer","format":"int64"},"country":{"type":"string","description":"The country of the app bundle country"},"appBundle":{"type":"integer","description":"DB reference to app bundle that contains this app bundle country.","format":"int64"}}},"MerchantProperties":{"type":"object","properties":{"merchantRef":{"$ref":"#/components/schemas/Reference"},"defaultCurrency":{"type":"string"},"tipsEnabled":{"type":"boolean"},"maxTipPercentage":{"type":"integer","format":"int64"},"receiptProperties":{"type":"string"},"summaryHour":{"type":"integer","format":"int32"},"signatureThreshold":{"type":"integer","format":"int64"},"hasDefaultEmployee":{"type":"boolean"},"tipRateDefault":{"type":"integer","format":"int32"},"onPaperTipSignatures":{"type":"boolean"},"noSignatureProgramEligible":{"type":"boolean"},"autoLogout":{"type":"boolean"},"orderTitle":{"type":"string","enum":["NONE","MANUAL","AUTOMATIC"]},"orderTitleMax":{"type":"integer","format":"int32"},"resetOnReportingTime":{"type":"boolean"},"notesOnOrders":{"type":"boolean"},"deleteOrders":{"type":"boolean"},"removeTaxEnabled":{"type":"boolean"},"groupLineItems":{"type":"boolean"},"alternateInventoryNames":{"type":"boolean"},"autoPrint":{"type":"boolean"},"hardwareProfile":{"type":"string"},"infoleaseSuppressBilling":{"type":"boolean"},"infoleaseSuppressPlanBilling":{"type":"boolean"},"shippingAddress":{"type":"string"},"marketingEnabled":{"type":"boolean"},"marketingPreferenceText":{"type":"string"},"bankMarker":{"type":"integer","format":"int32"},"supportPhone":{"type":"string"},"supportEmail":{"type":"string"},"manualCloseout":{"type":"boolean"},"manualCloseoutPerDevice":{"type":"boolean"},"autoCloseoutTimezone":{"type":"string"},"showCloseoutOrders":{"type":"boolean"},"sendCloseoutEmail":{"type":"boolean"},"stayInCategory":{"type":"boolean"},"locale":{"type":"string","description":"The locale of the merchant."},"timezone":{"type":"string"},"vat":{"type":"boolean","description":"Whether this merchant is in a VAT country"},"vatTaxName":{"type":"string","description":"The VAT tax name that is shown on receipts"},"appBillingSystem":{"type":"string","description":"Temporary while we are switching US billing systems"},"abaAccountNumber":{"type":"string","description":"The ABA Account Number.  Supplied by First Data."},"ddaAccountNumber":{"type":"string","description":"The Masked DDA Account Number.  Supplied by First Data."},"trackStock":{"type":"boolean","default":"false"},"updateStock":{"type":"boolean","default":"false"},"allowClockOutWithOpenOrders":{"type":"boolean"},"logInClockInPrompt":{"type":"boolean"},"accountType":{"type":"string"},"pinLength":{"type":"integer","format":"int32"},"cashBackEnabled":{"type":"boolean","description":"Whether cash back is enabled for this merchant"},"cashBackOptions":{"type":"string","description":"List of cash back possible cash back amounts"},"maxCashBack":{"type":"integer","description":"The maximum amount of cash back that the customer can select.","format":"int64"},"hierarchy":{"type":"string","description":"Merchant hierarchy (Business, Bank, Agent, Corp, Chain). Supplied by First Data."},"hasConsented":{"type":"boolean","description":"Whether or not merchant has consented to infolease billing"},"merchantBoardingStatus":{"type":"string","description":"This is used to identify if the merchant is self-boarded"},"alwaysRequireSignature":{"type":"boolean","description":"Whether we always require a signature for most transactions (excluding contactless under cvm limit)"},"printedFirstDataReceiptLogoEnabled":{"type":"boolean","description":"Whether we display the First Data receipt logo"},"privacyPolicyMode":{"type":"string","description":"Designates the privacy policy mode for this merchant (EU_GDPR_STRICT, EU_GDPR_FLEX, US_HIPPA)"},"merchantPrivacyPolicyUrl":{"type":"string","description":"Merchant-specified privacy policy url"},"disablePrintTaxesPaymentOnReceipts":{"type":"boolean","description":"Whether we display the taxes table on receipts"},"limpModeAllowed2":{"type":"boolean","description":"Per the new V2 TAMPER_EXPERIENCE (see feature flag) if this is true then setting the SRED_DISABLED merchant setting to true will result in the terminal parameter DENY_COMPROMISED_TX becoming false which enables a not provisioned (tampered) device with TransArmor SRED keys to take card payments without PIN. If this is false then setting SRED_DISABLED merchant to true setting will have no effect."}}},"Employee":{"required":["name"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Full name of the employee"},"nickname":{"type":"string","description":"Nickname of the employee (shows up on receipts)"},"customId":{"type":"string","description":"Custom ID of the employee"},"email":{"type":"string","description":"Email of the employee (optional)"},"inviteSent":{"type":"boolean","description":"Returns true if this employee was sent an invite to activate their account"},"claimedTime":{"type":"integer","description":"Timestamp of when this employee claimed their account"},"deletedTime":{"type":"integer","description":"Timestamp of when this employee was deleted"},"pin":{"type":"string","description":"Employee PIN (hashed)"},"unhashedPin":{"type":"string","description":"Employee PIN"},"role":{"type":"string","description":"Employee System Role","enum":["OWNER","ADMIN","MANAGER","EMPLOYEE"]},"roles":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}},"isOwner":{"type":"boolean","description":"Returns true if this employee is the owner account for this merchant"},"shifts":{"type":"array","description":"This employee's shifts","items":{"$ref":"#/components/schemas/Reference"}},"payments":{"type":"array","description":"This employee's payments","items":{"$ref":"#/components/schemas/Reference"}},"orders":{"type":"array","description":"This employee's orders","items":{"$ref":"#/components/schemas/Reference"}},"employeeCards":{"type":"array","description":"This employee's employee cards","items":{"$ref":"#/components/schemas/Reference"}},"merchant":{"description":"The merchant employing this employee","$ref":"#/components/schemas/Reference"}}},"Refund":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"orderRef":{"description":"The order with which the refund is associated","$ref":"#/components/schemas/Reference"},"device":{"description":"Device which processed the transaction for this refund, a 128-bit UUID, not a normal base-13 Clover ID.","$ref":"#/components/schemas/Reference"},"amount":{"type":"integer","description":"Total amount refunded, including tax and tip","format":"int64"},"taxAmount":{"type":"integer","description":"Tax amount refunded"},"tipAmount":{"type":"integer","description":"Tip amount refunded"},"createdTime":{"type":"integer","description":"The time when the refund was recorded on the server","format":"int64"},"clientCreatedTime":{"type":"integer","description":"The time when the refund was recorded on the client","format":"int64"},"payment":{"description":"The payment with which the refund is associated","$ref":"#/components/schemas/Reference"},"employee":{"$ref":"#/components/schemas/Reference"},"lineItems":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}},"overrideMerchantTender":{"description":"The tender type associated with this payment, e.g. credit card, cash, etc.","$ref":"#/components/schemas/Tender"},"taxableAmountRates":{"type":"array","items":{"$ref":"#/components/schemas/TaxableAmountRate"}},"serviceChargeAmount":{"$ref":"#/components/schemas/ServiceChargeAmount"},"additionalCharges":{"type":"array","items":{"$ref":"#/components/schemas/AdditionalChargeAmount"}},"germanInfo":{"description":"German region-specific information","$ref":"#/components/schemas/GermanInfo"},"appTracking":{"description":"Tracking information for the app that created this refund.","$ref":"#/components/schemas/AppTracking"},"voided":{"type":"boolean"},"voidReason":{"type":"string"},"cardTransaction":{"description":"Information about the card used for credit or debit card refunds","$ref":"#/components/schemas/CardTransaction"},"transactionInfo":{"description":"Transaction information","$ref":"#/components/schemas/TransactionInfo"},"merchant":{"$ref":"#/components/schemas/Reference"},"externalReferenceId":{"type":"string","description":"The external reference id if associated with the refund"}}},"PrintGroup":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier."},"orderRef":{"description":"Reference to the order associated with this PrintGroup.","$ref":"#/components/schemas/Reference"},"name":{"type":"string","description":"The print group heading that will be displayed on receipts."},"sortOrder":{"type":"integer","description":"The order in which this print group is displayed relative to other print groups on the same receipt. Print groups with identical sort orders will be ordered by name."},"fired":{"type":"boolean","description":"True if this print group has been sent to an order printer.","default":"false"}}},"Module":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string"}}},"DCCInfo":{"type":"object","properties":{"inquiryRateId":{"type":"integer","description":"Inquiry Rate ID (IPG)","format":"int64"},"dccApplied":{"type":"boolean","description":"Flag indicating whether DCC was applied on this txn"},"foreignCurrencyCode":{"type":"string","description":"Foreign currency code"},"foreignAmount":{"type":"integer","description":"Foreign (transaction) amount","format":"int64"},"exchangeRate":{"type":"number","description":"Exchange Rate"},"marginRatePercentage":{"type":"string","description":"Margin Rate Percentage"},"exchangeRateSourceName":{"type":"string","description":"Exchange Rate Source Name"},"exchangeRateSourceTimeStamp":{"type":"string","description":"Exchange Rate Source Timestamp"}}},"Modification":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","description":"the name of the modifier when it was applied"},"alternateName":{"type":"string"},"amount":{"type":"integer","description":"the additional cost of the modifier when it was applied","format":"int64"},"modifier":{"description":"The modifier object.  Values from the Modifier are copied to the Modification at the time that the order is placed.  Modifier values may change after the modification is created.","$ref":"#/components/schemas/Modifier"},"quantitySold":{"type":"integer","description":"This is only used in reports. The count of how many of these modifiers that were sold.","format":"int64"}}},"EmployeeCard":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"merchant":{"description":"The merchant the card belongs to","$ref":"#/components/schemas/Reference"},"employee":{"description":"The employee who the card is currently assigned to","$ref":"#/components/schemas/Reference"},"updater":{"description":"The employee who last updated the card's state","$ref":"#/components/schemas/Reference"},"number":{"type":"string","description":"Unique number on the employee card."},"status":{"type":"string","description":"Current status of the employee card","enum":["ACTIVE","DISABLED"]},"createdTime":{"type":"integer","description":"Timestamp of when this employee card was created","format":"int64"},"modifiedTime":{"type":"integer","description":"Timestamp of when this employee card was last updated","format":"int64"}}},"Discount":{"required":["name"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"discount":{"description":"If this item is based on a standard discount, this will point to the appropriate inventory.Discount","$ref":"#/components/schemas/Reference"},"approver":{"description":"The person that authorized a discount","$ref":"#/components/schemas/Reference"},"name":{"type":"string","description":"Name of the discount"},"amount":{"type":"integer","description":"Discount amount in fraction of currency unit (e.g. cents) based on currency fraction digits supported"},"percentage":{"type":"integer","description":"Discount amount in percent"}}},"Attribute":{"required":["itemGroup","name"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Name of this attribute"},"itemGroup":{"description":"The item group this attribute belongs to","$ref":"#/components/schemas/Reference"},"options":{"type":"array","description":"Options associated with this attribute","items":{"$ref":"#/components/schemas/Option"}}}},"AppBillingInfo":{"type":"object","properties":{"id":{"type":"string","description":"App UUID"},"appSubscription":{"description":"Returns the current subscription tier of the merchant's app subscription.","$ref":"#/components/schemas/AppSubscription"},"isInTrial":{"type":"boolean","description":"Returns true if a trial period is enabled for a paid app. You can choose the number of trial period days for your app."},"billable":{"type":"boolean","description":"Returns true if a merchant using an app is billable, and false if there is an app suppression on this particular app for the specific merchant."},"appBillable":{"type":"boolean","description":"Returns false if all apps are non-billable for the specific merchant."},"planBillable":{"type":"boolean","description":"Returns false if plan fees are non-billable for the specific merchant."},"appExportable":{"type":"boolean","description":"Returns false if app charges are not exportable for the specific merchant."},"planExportable":{"type":"boolean","description":"Returns false if plan charges are not exportable for the specific merchant."},"billingStartTime":{"type":"integer","description":"Returns the time when a merchant's app trial ends and billing commences.","format":"int64"},"status":{"type":"string","description":"Returns ACTIVE for an active Clover merchant when the merchant's bank account is in good standing. Returns INACTIVE if the merchant was offboarded. Returns LAPSED if the merchant failed to pay Clover for app usage. Returns SUPPRESSED if this merchant will not be billed for reasons such as it's a demo merchant account, test merchant account, or that the merchant’s country is a pilot.","enum":["ACTIVE","INACTIVE","LAPSED","SUPPRESSED"]},"daysLapsed":{"type":"integer","description":"Returns the number of days since the merchant's account was not in the ACTIVE status.","format":"int64"}}},"TaxRateItem":{"required":["item","taxRate"],"type":"object","properties":{"taxRate":{"$ref":"#/components/schemas/TaxRate"},"item":{"$ref":"#/components/schemas/Item"}}},"AppSubscriptionCountry":{"required":["amount","country","description","name"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"App subscription country name"},"amount":{"type":"integer","description":"The cost of the subscription country","format":"int64"},"country":{"type":"string","description":"The country of the subscription country"},"description":{"type":"string","description":"App subscription country name"},"active":{"type":"boolean","description":"App subscription country active status"},"appSubscription":{"description":"Reference to subscription this subscription country belongs to","$ref":"#/components/schemas/Reference"},"installCount":{"type":"integer","description":"The number of merchants that have this app subscription country installed","format":"int64"}}},"Authorization":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"payment":{"description":"Payment that the auth was opened with","$ref":"#/components/schemas/Payment"},"tabName":{"type":"string","description":"Name of tab"},"amount":{"type":"integer","description":"Amount authorized","format":"int64"},"cardType":{"type":"string","description":"Type of credit card used for authorization","enum":["VISA","MC","AMEX","DISCOVER","DINERS_CLUB","JCB","MAESTRO","SOLO","LASER","CHINA_UNION_PAY","CARTE_BLANCHE","UNKNOWN","GIFT_CARD","EBT","GIROCARD","INTERAC","OTHER"]},"last4":{"type":"string","description":"Last 4 digits of credit card used for authorization"},"authcode":{"type":"string","description":"Authorization code"},"token":{"type":"string","description":"Token used for the authorization"},"type":{"type":"string","enum":["TAB","AUTH"]},"note":{"type":"string"},"externalReferenceId":{"type":"string","description":"The external reference id if associated with the payment"},"closingPayment":{"description":"Payment that the auth was closed with","$ref":"#/components/schemas/Payment"},"createdTime":{"type":"integer","description":"Time authorization was recorded on server","format":"int64"},"additionalCharges":{"type":"array","description":"Additional charges associated with the authorization. For incremental auth, it is the additional charge on total auth amount.","items":{"$ref":"#/components/schemas/AdditionalChargeAmount"}}}},"Merchant":{"required":["name","owner"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Name of the merchant"},"owner":{"description":"The account that owns this merchant","$ref":"#/components/schemas/Employee"},"address":{"description":"The address of the merchant.","$ref":"#/components/schemas/Address"}}},"ModifierGroupArray":{"type":"object","properties":{"modifierGroups":{"type":"array","items":{"$ref":"#/components/schemas/ModifierGroup"}}}},"VoidedItemsSummary":{"type":"object","properties":{"printed":{"type":"integer","description":"number of printed line items deleted","format":"int64"},"unprinted":{"type":"integer","description":"number of unprinted line items deleted","format":"int64"},"price":{"type":"integer","description":"sum of price of all the items, in cents of merchant currency.","format":"int64"},"priceWithQuantity":{"type":"integer","description":"sum of price of all the items, in cents of merchant currency multiplied by quantity.","format":"int64"},"priceWithQuantityAndModifiers":{"type":"integer","description":"sum of price of all the items multiplied with quantity and includes modifiers.","format":"int64"},"deletedOrders":{"type":"integer","description":"number of orders deleted","format":"int64"},"deletedItems":{"type":"integer","description":"number of line items deleted","format":"int64"},"chartSummary":{"description":"summary of the chart data","$ref":"#/components/schemas/VoidedItemsChartSummary"}}},"TransactionInfo":{"type":"object","properties":{"languageIndicator":{"type":"string","description":"2 character language used for the transaction. Deprecated in factor of transactionLocale."},"transactionLocale":{"type":"string","description":"Locale for the transaction (e.g. en-CA)"},"accountSelection":{"type":"string","enum":["CREDIT","DEBIT","CHECKING","SAVINGS"]},"fiscalInvoiceNumber":{"type":"string","description":"Consists of 4 digits prefix + 8 digits"},"installmentsQuantity":{"type":"integer","description":"AR Installments: number of installments","format":"int32"},"installmentsPlanCode":{"type":"string","description":"AR Installments: plan alphanum code"},"installmentsPlanId":{"type":"string","description":"AR Installments: selected plan id"},"installmentsPlanDesc":{"type":"string","description":"AR Installments: selected plan desc"},"cardTypeLabel":{"type":"string","description":"Card type label"},"cardSymbol":{"type":"string","description":"Card Symbol for identify in payment_card_config table"},"stan":{"type":"integer","description":"STAN(System Audit Trace Number)","format":"int32"},"identityDocument":{"description":"Customers identification number and type","$ref":"#/components/schemas/IdentityDocument"},"batchNumber":{"type":"string","description":"Transaction Batch Number"},"receiptNumber":{"type":"string","description":"Transaction Receipt Number"},"reversalStanRefNum":{"type":"string","description":"Reversal STAN Ref Num"},"reversalStan":{"type":"integer","description":"STAN for reversal","format":"int32"},"reversalMac":{"type":"string","description":"MAC for reversal"},"reversalMacKsn":{"type":"string","description":"MAC KSN for reversal"},"terminalIdentification":{"type":"string","description":"Designates the unique location of a terminal at a merchant"},"externalTerminalId":{"type":"string","description":"Main internal identifier of terminal which should be the same across all Fiserv’s components"},"merchantIdentifier":{"type":"string","description":"When concatenated with the Acquirer Identifier, uniquely identifies a given merchant"},"merchantNameLocation":{"type":"string","description":"Indicates the name and location of the merchant"},"maskedTrack2":{"type":"string","description":"Masked track2 data"},"receiptExtraData":{"type":"string","description":"Extra data for receipt"},"selectedService":{"type":"string","description":"Defines the Financial Service selected for the transaction","enum":["NONE","PAYMENT","REFUND","CANCELLATION","PRE_AUTH","UPDATE_PRE_AUTH","PAYMENT_COMPLETION","CASH_ADVANCE","DEFERRED_PAYMENT","DEFERRED_PAYMENT_COMPLETION","VOICE_AUTHORISATION","CARDHOLDER_DETECTION","TOKEN_REQUEST","VERIFICATION"]},"transactionResult":{"type":"string","description":"Result of the transaction","enum":["APPROVED","DECLINED","ABORTED","VOICE_AUTHORISATION","PAYMENT_PART_ONLY","PARTIALLY_APPROVED","NONE"]},"transactionTags":{"type":"string","description":"Contains a hex string with needed TLV tags for certification"},"txFormat":{"type":"string","description":"Contains the information how the data inside transactionTags should be coded - initially we cause default and nexo as formats","enum":["DEFAULT","NEXO"]},"panMask":{"type":"string","description":"Contains the information how the PAN should masked."},"transactionSequenceCounter":{"type":"string","description":"Counter maintained by the terminal that is incremented for each transaction at the beginning of the Perform Service function."},"applicationPanSequenceNumber":{"type":"string","description":"Identifies and differentiates cards with the same PAN."},"reversalReason":{"type":"string","description":"Contains the reason why the transaction should be reversed in the host. It has to be mapped in server with the expected value by the corresponding gateway","enum":["CHIP_DECLINE","CARDHOLDER_CANCELLATION","COMMUNICATION_ERROR","OTHER_REASON"]},"isTokenBasedTx":{"type":"boolean","description":"Boolean to determine if the transaction done using a vaulted card is a token based transaction","default":"false"},"origTransactionSequenceCounter":{"type":"string","description":"For reversal and capture transactions, this contains the reference (transactionSequenceCounter) to the originating transaction."},"transactionSequenceCounterUpdate":{"type":"string","description":"This field is populated when the TSC of a terminal is out of sync and is provided with an update."},"emergencyFlag":{"type":"boolean","description":"Boolean value defining if the corresponding TX was performed in NEXO emergency mode according NEXO IS Spec chapter 10.2","default":"false"},"entryType":{"type":"string","description":"This field contains the entry type of a transaction.","enum":["SWIPED","KEYED","VOICE","VAULTED","OFFLINE_SWIPED","OFFLINE_KEYED","EMV_CONTACT","EMV_CONTACTLESS","MSD_CONTACTLESS","PINPAD_MANUAL_ENTRY","QR_CODE","SCANNED"]},"promotionalMessage":{"$ref":"#/components/schemas/PromotionalMessage"},"sepaElvTransactionInfo":{"$ref":"#/components/schemas/SepaElvTransactionInfo"},"clientCardType":{"type":"string","description":"Client card type should be used only limited purpose only and should not be confused with cardType in other objects.\n This is a read only field and must not to be overwritten on server or client once set on client. \n This is set on client only for MSR tx for now as the AIDs are not identified for MSR. \n For few MSR tx, the card type was identified incorrectly on client side, and also on server side based on the bin match. \n In order to get the correct card types, this client card type will be sent to the server","enum":["VISA","MC","AMEX","DISCOVER","DINERS_CLUB","JCB","MAESTRO","SOLO","LASER","CHINA_UNION_PAY","CARTE_BLANCHE","UNKNOWN","GIFT_CARD","EBT","GIROCARD","INTERAC","OTHER"]},"explicitlySelectedApp":{"type":"string","description":"The app explicitly selected by the customer via the choice button."},"isSepaElv":{"type":"boolean","description":"Defines if the corresponding TX was performed as SEPA ELV TX."},"cardEntryType":{"type":"string","description":"Defines if the corresponding TX was performed as SEPA ELV TX.","enum":["SWIPED","KEYED","VOICE","VAULTED","OFFLINE_SWIPED","OFFLINE_KEYED","EMV_CONTACT","EMV_CONTACTLESS","MSD_CONTACTLESS","PINPAD_MANUAL_ENTRY","QR_CODE","SCANNED"]},"printMessages":{"type":"array","items":{"$ref":"#/components/schemas/DisplayAndPrintMessage"}}}},"SepaElvTransactionInfo":{"type":"object","properties":{"receiptFormat":{"type":"string","description":"Value of tag E1.DF8206 from NEXO config."},"extAppLabel":{"type":"string","description":"Value of tag E6.DF8211 or E6.DF8212 (Online or Offline TX printout)."},"preNotification":{"type":"string","description":"Value of tag E6.DF8214 info form NEXO config."},"mandate":{"type":"string","description":"Value of tag E6.DF8215 info from NEXO config."},"creditorId":{"type":"string","description":"Value of tag E6.DF8216 info from NEXO config."},"mandateId":{"type":"string","description":"Generated by SPA according to ELV – TBD: use Trace number instead of receipt number."},"iban":{"type":"string","description":"Received in ICC related data from IPG (tag 5F53)."},"isMerchantForced":{"type":"boolean","description":"Defines if the corresponding SEPA ELV TX was forced by the merchant (override defined limit)"}}},"Reference":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"}}},"AppTracking":{"type":"object","properties":{"developerAppId":{"type":"string","description":"The uuid from the developer application.  This is typically populated and used only on the back end."},"applicationName":{"type":"string","description":"The name of the developer application."},"applicationID":{"type":"string","description":"A string representing an application"},"applicationVersion":{"type":"string","description":"A string representing a semanticversion.  See http://semver.org/"},"sourceSDK":{"type":"string","description":"A string representing a SDK"},"sourceSDKVersion":{"type":"string","description":"A string representing a semanticversion.  See http://semver.org/"}}},"OrderTaxRate":{"required":["amount","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"amount":{"type":"integer","format":"int64"},"rate":{"type":"integer","description":"Rate in percentage for this order tax rate","format":"int64"},"lineItems":{"type":"array","description":"Line item associated with this order tax rate","items":{"$ref":"#/components/schemas/LineItem"}}}},"TagItem":{"required":["item","tag"],"type":"object","properties":{"tag":{"$ref":"#/components/schemas/Tag"},"item":{"$ref":"#/components/schemas/Item"}}},"VoidedLineItem":{"type":"object","properties":{"lineItem":{"description":"The line item that was voided","$ref":"#/components/schemas/LineItem"},"merchant":{"$ref":"#/components/schemas/Reference"},"reason":{"type":"string","description":"Why was the line item voided"},"removedBy":{"description":"Employee who voided the item","$ref":"#/components/schemas/Reference"},"approvedBy":{"description":"Optional. Employee who approved deletion of line item in case current employee does not have the permission","$ref":"#/components/schemas/Reference"},"deleteType":{"type":"string","description":"Indicates if the line item was deleted as part of order delete or a single item delete. "},"device":{"description":"Optional. Device used to void the line item","$ref":"#/components/schemas/Reference"},"createdBy":{"description":"Employee who created the order from which the line item was voided","$ref":"#/components/schemas/Reference"},"deletedTime":{"type":"integer","description":"Timestamp of when this line item was deleted","format":"int64"},"environment":{"type":"string","description":"Which environment was this recorded in"},"clientEventType":{"type":"string","description":"What event on the client removed this? Was it because of moving a table? Or was it plain old deleting a line item?","enum":["DELETED_LINE_ITEM","MOVED_TABLE","LEFT_TABLE","CUSTOM_LINE_ITEM_CANCELLED"]}}},"ItemGroup":{"required":["name"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Name of the option"},"items":{"type":"array","description":"Items that are members of this group","items":{"$ref":"#/components/schemas/Reference"}},"attributes":{"type":"array","description":"Attributes that belong to this group","items":{"$ref":"#/components/schemas/Reference"}}}},"PhoneNumber":{"required":["phoneNumber"],"type":"object","properties":{"id":{"type":"string"},"phoneNumber":{"type":"string"},"customer":{"description":"Customer who this phone number belongs to.","$ref":"#/components/schemas/Reference"}}},"Tag":{"required":["name"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Tag name","default":""},"showInReporting":{"type":"boolean","description":"True if tag is a summary label in the reporting app","default":"false"},"items":{"type":"array","description":"Items associated with this tag","items":{"$ref":"#/components/schemas/Reference"}},"printers":{"type":"array","description":"Printers associated with this tag","items":{"$ref":"#/components/schemas/Reference"}}}},"OrderCart":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"currency":{"type":"string","description":"Currency of this order. For example, \"USD\""},"title":{"type":"string"},"note":{"type":"string","description":"An arbitrary string with information about this order, may be printed on the order receipt and displayed in apps"},"clientCreatedTime":{"type":"integer","description":"The time at which the client created this order","format":"int64"},"serviceCharge":{"description":"Optional service charge (gratuity) applied to this order","$ref":"#/components/schemas/ServiceCharge"},"discounts":{"type":"array","description":"Amount or percentage discounts applied to the order subtotal. To retrieve discounts applied to individual items, use the Get all line items for an order endpoint with the discounts field expanded (v3/merchants/{mId}/orders/{orderId}/line_items?expand=discounts).","items":{"$ref":"#/components/schemas/Discount"}},"lineItems":{"type":"array","description":"Line items associated with this order","items":{"$ref":"#/components/schemas/LineItem"}},"orderType":{"$ref":"#/components/schemas/OrderType"},"merchant":{"$ref":"#/components/schemas/Reference"},"groupLineItems":{"type":"boolean","description":"Whether similar line items should be grouped together on the receipt that this order generates. Item \"similarity\" is based on items having matching values for a set of properties including price, modifiers, and discounts.","default":"false"}}},"CategoryItem":{"required":["category","item"],"type":"object","properties":{"item":{"$ref":"#/components/schemas/Item"},"category":{"$ref":"#/components/schemas/Category"}}},"TaxableAmountRate":{"type":"object","properties":{"id":{"type":"string","description":"Tax rate id."},"name":{"type":"string","description":"Tax rate name. This field is optional."},"taxableAmount":{"type":"integer","description":"The sub-total of line items that the tax was based on. For VAT, this amount includes tax. For all others, this amount does not include tax.","format":"int64"},"rate":{"type":"integer","description":"The tax rate. 100% = 1e7.","format":"int64"},"isVat":{"type":"boolean","description":"Whether the taxable amount includes tax."},"taxAmount":{"type":"integer","description":"The amount of tax collected. In cases where there are multiple payments for an order then it may be necessary to add an extra cent of tax to the last payment.","format":"int64"},"transactionRef":{"description":"The refund with which the tax rate is associated","$ref":"#/components/schemas/Reference"}}},"IncrementalAuthorization":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"amount":{"type":"integer","description":"Amount of the incremental authorization, includes additional charges in db","format":"int64"},"cardTransaction":{"$ref":"#/components/schemas/CardTransaction"},"result":{"type":"string","description":"Result of the incremental auth","enum":["SUCCESS","FAIL","INITIATED","VOIDED","VOIDING","VOID_FAILED","AUTH","AUTH_COMPLETED","DISCOUNT","OFFLINE_RETRYING","PENDING"]},"createdTime":{"type":"integer","description":"Created time on the server","format":"int64"},"employee":{"description":"The employee who processed the incremental Auth","$ref":"#/components/schemas/Reference"},"incrementAmount":{"type":"integer","description":"Amount of the incremental authorization","format":"int64"}}},"ItemStock":{"type":"object","properties":{"item":{"description":"Reference to an item","$ref":"#/components/schemas/Reference"},"stockCount":{"type":"integer","description":"Deprecated, use quantity instead."},"quantity":{"type":"number","description":"Current count of this item in stock."},"modifiedTime":{"type":"integer"}}},"AppSubscription":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"DEPRECATED: App subscription name.  Per country pricing in subscriptionCountries."},"amount":{"type":"integer","description":"DEPRECATED: The cost of the subscription.  Per country pricing in subscriptionCountries.","format":"int64"},"description":{"type":"string","description":"DEPRECATED: App subscription name.  Per country pricing in subscriptionCountries."},"active":{"type":"boolean","description":"DEPRECATED: App subscription active status.  Per country pricing in subscriptionCountries."},"plan":{"type":"boolean","description":"True if special zero cost app pricing for default app in custom service plans."},"subscriptionCountries":{"type":"array","description":"Subscription country options for this app subscription","items":{"$ref":"#/components/schemas/AppSubscriptionCountry"}},"app":{"description":"Reference to app this subscription belongs to","$ref":"#/components/schemas/Reference"},"label":{"type":"string","description":"App subscription label"}}},"LineItemPayment":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier; TBD this is confusing because it's used as either line item id or payment id"},"percentage":{"type":"integer","description":"Percent of this line item covered by this payment","format":"int64"},"binName":{"type":"string","description":"Bin this line item payment was for"},"refunded":{"type":"boolean","description":"Payment has been refunded"}}},"OrderType":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"labelKey":{"type":"string","description":"Label Key"},"label":{"type":"string","description":"Label Key"},"taxable":{"type":"boolean","description":"If this order type is taxable","default":"false"},"isDefault":{"type":"boolean","description":"If this order type is the default","default":"false"},"filterCategories":{"type":"boolean","description":"If set to false, then this order type includes all of the merchant's categories. Otherwise, it only contains the categories defined in the \"categories\" field on this object.","default":"false"},"isHidden":{"type":"boolean","description":"If this order type is hidden on the register","default":"false"},"fee":{"type":"integer","description":"The price of a fee added to this order type, not fully implemented at this time."},"minOrderAmount":{"type":"integer","description":"The minimum amount required for an order to be placed"},"maxOrderAmount":{"type":"integer","description":"The maximum amount for an order allowed"},"maxRadius":{"type":"integer","description":"The maximum radius allowed for an order (i.e. delivery)"},"avgOrderTime":{"type":"integer","description":"The average time it takes to complete the order"},"hoursAvailable":{"type":"string","enum":["ALL","BUSINESS","CUSTOM"]},"customerIdMethod":{"type":"string","enum":["NAME","TABLE","NAME_TABLE"]},"isDeleted":{"type":"boolean","description":"If this order type is deleted","default":"false"},"systemOrderTypeId":{"type":"string","description":"Optional system order type that this order type is associated with."},"hours":{"description":"The hours this order type is available (if they differ from normal merchant hours)","$ref":"#/components/schemas/HoursSet"},"categories":{"type":"array","description":"The categories of items that can be assigned to this order type","items":{"$ref":"#/components/schemas/Reference"}}}},"CreditRefund":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"orderRef":{"description":"The order with which the refund is associated","$ref":"#/components/schemas/Reference"},"device":{"description":"Device which processed the transaction for this refund, a 128-bit UUID, not a normal base-13 Clover ID.","$ref":"#/components/schemas/Reference"},"createdTime":{"type":"integer","description":"The time when the refund was recorded on the server","format":"int64"},"clientCreatedTime":{"type":"integer","description":"The time when the refund was recorded on the client","format":"int64"},"credit":{"description":"The credit with which the credit refund is associated","$ref":"#/components/schemas/Reference"},"employee":{"$ref":"#/components/schemas/Reference"},"germanInfo":{"description":"German region-specific information","$ref":"#/components/schemas/GermanInfo"},"appTracking":{"description":"Tracking information for the app that created this payment.","$ref":"#/components/schemas/AppTracking"},"transactionInfo":{"description":"Transaction information","$ref":"#/components/schemas/TransactionInfo"}}},"DisplayAndPrintMessage":{"type":"object","properties":{"destination":{"type":"string","description":"Destination for the message CDSP - CustomerDisplay, CRCP - CustomerReceipt/AidParam, MDSP - MerchantDisplay, MRCP - MerchantReceipt/AidParam","enum":["CUSTOMER_DISPLAY","CUSTOMER_RECEIPT","CUSTOMER_RECEIPT_AID_PARAM","MERCHANT_DISPLAY","MERCHANT_RECEIPT","MERCHANT_RECEIPT_AID_PARAM"]},"content":{"type":"string","description":"Contains the display and/or print message text from gateway"}}},"VoidedItemsChartData":{"type":"object","properties":{"revenueClassName":{"type":"string","description":"name of revenue class"},"priceWithQuantity":{"type":"integer","description":"sum of price of all the items, in cents of merchant currency multiplied by quantity.","format":"int64"},"priceWithQuantityAndModifiers":{"type":"integer","description":"sum of price of all the items multiplied with quantity and includes modifiers.","format":"int64"},"count":{"type":"integer","description":"number of line item in this revenue class","format":"int64"}}},"Shift":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"employee":{"description":"The employee that worked this shift","$ref":"#/components/schemas/Employee"},"cashTipsCollected":{"type":"integer","description":"Amount of cash tips collected","format":"int64"},"serverBanking":{"type":"boolean","description":"Whether the employee used server banking"},"inTime":{"type":"integer","description":"Clock in time","format":"int64"},"overrideInTime":{"type":"integer","description":"Overridden clock in time","format":"int64"},"overrideInEmployee":{"description":"The employee who overrode the clock in time","$ref":"#/components/schemas/Employee"},"outTime":{"type":"integer","description":"Clock out time","format":"int64"},"overrideOutTime":{"type":"integer","description":"Overridden clock out time","format":"int64"},"overrideOutEmployee":{"description":"The employee who overrode the clock out time","$ref":"#/components/schemas/Employee"}}},"Order":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"currency":{"type":"string","description":"Currency of this order. For example, \"USD\""},"customers":{"type":"array","description":"List of customers associated with this order.","items":{"$ref":"#/components/schemas/Customer"}},"employee":{"description":"The employee who took this order","$ref":"#/components/schemas/Reference"},"total":{"type":"integer","description":"Total price of the order in cents"},"externalReferenceId":{"type":"string","description":"External reference id if present in the order"},"unpaidBalance":{"type":"integer","description":"The net of orders with payment minus the amount collected. Includes refunds, manual refunds, tax, tip, service charge, non-revenue items, paid gift card activations and loads and discounts"},"paymentState":{"type":"string","description":"Is this order paid or not?","enum":["OPEN","PAID","REFUNDED","CREDITED","PARTIALLY_PAID","PARTIALLY_REFUNDED"]},"title":{"type":"string"},"note":{"type":"string","description":"An arbitrary string with information about this order, may be printed on the order receipt and displayed in apps"},"orderType":{"$ref":"#/components/schemas/OrderType"},"taxRemoved":{"type":"boolean","description":"If true then this order should not have taxes applied to it","default":"false"},"isVat":{"type":"boolean","description":"This order was created by merchant with VAT enabled."},"state":{"type":"string","description":"A String generally describing the state of the Order. When creating an Order, the value must be manually set to \"open\". If no value is set, the state defaults to null, which indicates an unfinished Order. An unfinished order is not displayed in user interfaces and can only be retrieved by its id. Non-null values such as \"open\" and \"locked\" are not checked or enforced by the server. Therefore, these values should not be used to make any logical decisions about the Order."},"manualTransaction":{"type":"boolean","description":"Whether this order represents a manual transaction. A manual transaction is a transaction that has an arbitrary amount defined and is not associated with any inventory items. For example, the Clover Sale App and Clover Manual Transaction App create manual transactions. A manual transactions will have a single associated line item to hold the sale amount, but the generated receipt will display this differently to indicate that it is not considered a typical order with inventory items."},"groupLineItems":{"type":"boolean","description":"Whether similar line items should be grouped together on the receipt that this order generates. Item \"similarity\" is based on items having matching values for a set of properties including price, modifiers, and discounts."},"testMode":{"type":"boolean","description":"Whether this order was created in test mode. Payments made against test orders are not processed. Test mode orders can be deleted from the Orders App on the merchant's device or web dashboard (https://www.clover.com/orders/m/{mId}/orders). They will also be deleted when the device sends a POST to the /v2/merchant/{mId}/orders/delete_all_tests endpoint."},"payType":{"type":"string","description":"Possible values: SPLIT_GUEST, SPLIT_ITEM, SPLIT_CUSTOM, FULL. During the payment flow, if the user chooses to split the payment for this order, this field will be set to one of the SPLIT_* values to indicate how the full amount should be split. If the user chooses to pay for the order in full with one payment, then this field will be FULL.","enum":["SPLIT_GUEST","SPLIT_ITEM","SPLIT_CUSTOM","FULL"]},"createdTime":{"type":"integer","description":"Creation timestamp","format":"int64"},"clientCreatedTime":{"type":"integer","description":"The time at which the client created this order","format":"int64"},"modifiedTime":{"type":"integer","description":"Last modified time of the order","format":"int64"},"deletedTimestamp":{"type":"integer","format":"int64"},"serviceCharge":{"description":"Optional service charge (gratuity) applied to this order","$ref":"#/components/schemas/ServiceCharge"},"discounts":{"type":"array","description":"Amount or percentage discounts applied to the order subtotal. To retrieve discounts applied to individual items, use the Get all line items for an order endpoint with the discounts field expanded (v3/merchants/{mId}/orders/{orderId}/line_items?expand=discounts).","items":{"$ref":"#/components/schemas/Discount"}},"lineItems":{"type":"array","description":"Line items associated with this order","items":{"$ref":"#/components/schemas/LineItem"}},"payments":{"type":"array","description":"Payments that were made for this order. If multiple payments were made, then the payType field should reflect the method used to split the total amount.","items":{"$ref":"#/components/schemas/Payment"}},"refunds":{"type":"array","description":"Refunds that were made for this order","items":{"$ref":"#/components/schemas/Refund"}},"credits":{"type":"array","description":"Credits associated with this order.","items":{"$ref":"#/components/schemas/Credit"}},"voids":{"type":"array","description":"Voided payments associated with this order","items":{"$ref":"#/components/schemas/Payment"}},"preAuths":{"type":"array","description":"Pre-authorizations associated with this order","items":{"$ref":"#/components/schemas/Payment"}},"device":{"description":"Device which created the order, a 128-bit UUID, not a normal base-13 Clover ID.","$ref":"#/components/schemas/Reference"},"authorizations":{"type":"array","description":"Card authorizations associated with this order","items":{"$ref":"#/components/schemas/Authorization"}},"merchant":{"$ref":"#/components/schemas/Reference"},"printGroups":{"type":"array","description":"Print groups for line items of this order.","items":{"$ref":"#/components/schemas/PrintGroup"}}}},"Device":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Name of the device (if entered)"},"model":{"type":"string"},"merchant":{"$ref":"#/components/schemas/Reference"},"orderPrefix":{"type":"string","description":"A prefix that will be applied to order numbers. This is useful if the merchant and/or customer needs to track which device an order came from."},"terminalId":{"type":"string","description":"The merchant device's terminal Id. FD-IPG sets the merchant_device terminal Id for LATAM devices"},"terminalPrefix":{"type":"integer"},"serial":{"type":"string","description":"The device's serial number."},"buildNumber":{"type":"integer","format":"int64"},"secureId":{"type":"string"},"buildType":{"type":"string","enum":["ENG","USER","USERDEBUG"]},"cpuId":{"type":"string"},"imei":{"type":"string","description":"The IMEI of the device"},"imsi":{"type":"string","description":"The IMSI of the SIM in the device (if present)"},"simIccid":{"type":"string","description":"The ICCID of the SIM in the device (if present)"},"deviceCertificate":{"type":"string"},"pedCertificate":{"type":"string"},"deviceTypeName":{"type":"string"},"productName":{"type":"string"},"pinDisabled":{"type":"boolean","description":"Whether this device has PIN prompt disabled.","default":"false"},"offlinePayments":{"type":"boolean","default":"false"},"offlinePaymentsAll":{"type":"boolean","default":"false"},"offlinePaymentsLimit":{"type":"integer","format":"int64"},"offlinePaymentsPromptThreshold":{"type":"integer","format":"int64"},"offlinePaymentsTotalPaymentsLimit":{"type":"integer","format":"int64"},"offlinePaymentsLimitDefault":{"type":"integer","format":"int64"},"offlinePaymentsPromptThresholdDefault":{"type":"integer","format":"int64"},"offlinePaymentsTotalPaymentsLimitDefault":{"type":"integer","format":"int64"},"offlinePaymentsMaxLimit":{"type":"integer","format":"int64"},"offlinePaymentsMaxTotalPaymentsLimit":{"type":"integer","format":"int64"},"showOfflinePayments":{"type":"boolean"},"maxOfflineDays":{"type":"integer","format":"int64"},"allowStoreAndForward":{"type":"boolean"},"secureReports":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}},"bundleIndicator":{"type":"string"},"deviceType":{"$ref":"#/components/schemas/Reference"}}},"PurchaseCardL2":{"type":"object","properties":{"taxAmount":{"type":"integer","description":"Sales tax amount.","format":"int64"},"taxIndicator":{"type":"string","description":"Taxable status","enum":["UNKNOWN","TAXABLE","NON_TAXABLE"]},"vatTaxAmount":{"type":"integer","description":"Tax amount for freight/shipping.","format":"int64"},"vatTaxRate":{"type":"integer","description":"Tax rate on freight/shipping amount.","format":"int32"},"purchaseIdentifier":{"type":"string","description":"Purchase identifier for customer/merchant."},"pcOrderNumber":{"type":"string","description":"Purchase card customer code."},"discountAmount":{"type":"integer","description":"Applied discount amount.","format":"int64"},"freightAmount":{"type":"integer","description":"Freight amount.","format":"int64"},"dutyAmount":{"type":"integer","description":"Duty amount.","format":"int64"},"destinationPostalCode":{"type":"string","description":"Destination postal code."},"shipFromPostalCode":{"type":"string","description":"Ship from postal code."},"destinationCountryCode":{"type":"string","description":"Destination country code."},"merchantTaxId":{"type":"string","description":"Merchant tax id."},"productDescription":{"type":"string","description":"Description of the product."}}},"OrderCheckoutRequest":{"type":"object","properties":{"orderCart":{"description":"The order cart to put items, discounts, modifications and order-related information","$ref":"#/components/schemas/OrderCart"}}},"Role":{"required":["name","systemRole"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Full name of the role"},"systemRole":{"type":"string","description":"Base System Role","enum":["OWNER","ADMIN","MANAGER","EMPLOYEE"]},"employeesRef":{"type":"array","description":"employees with this role","items":{"$ref":"#/components/schemas/Reference"}},"merchant":{"description":"The merchant this role belongs to.","$ref":"#/components/schemas/Reference"}}},"CardTransaction":{"type":"object","properties":{"cardType":{"type":"string","enum":["VISA","MC","AMEX","DISCOVER","DINERS_CLUB","JCB","MAESTRO","SOLO","LASER","CHINA_UNION_PAY","CARTE_BLANCHE","UNKNOWN","GIFT_CARD","EBT","GIROCARD","INTERAC","OTHER"]},"entryType":{"type":"string","enum":["SWIPED","KEYED","VOICE","VAULTED","OFFLINE_SWIPED","OFFLINE_KEYED","EMV_CONTACT","EMV_CONTACTLESS","MSD_CONTACTLESS","PINPAD_MANUAL_ENTRY","QR_CODE","SCANNED"]},"first6":{"type":"string","description":"The first four digits of the card number"},"last4":{"type":"string","description":"The last four digits of the card number"},"type":{"type":"string","enum":["AUTH","PREAUTH","PREAUTHCAPTURE","ADJUST","VOID","VOIDRETURN","RETURN","REFUND","NAKEDREFUND","GETBALANCE","BATCHCLOSE","ACTIVATE","BALANCE_LOCK","LOAD","CASHOUT","CASHOUT_ACTIVE_STATUS","REDEMPTION","REDEMPTION_UNLOCK","RELOAD","CASH_ADVANCE","VOID_CREDIT","REFUND_CREDIT","INTERNET_ACTIVATE","TOKEN_REQUEST","VERIFICATION"]},"authCode":{"type":"string","description":"Authorization code (if successful)"},"referenceId":{"type":"string"},"transactionNo":{"type":"string"},"state":{"type":"string","description":"A state inferred from transaction type and whether the gateway captured the transaction","enum":["PENDING","CLOSED"]},"extra":{"type":"object","properties":{"default":{"type":"string"}},"description":"Extra info to be stored as part of gateway/card transaction"},"begBalance":{"type":"integer"},"endBalance":{"type":"integer"},"avsResult":{"type":"string","enum":["SUCCESS","ZIP_CODE_MATCH","ZIP_CODE_MATCH_ADDRESS_NOT_CHECKED","ADDRESS_MATCH","ADDRESS_MATCH_ZIP_NOT_CHECKED","NEITHER_MATCH","SERVICE_FAILURE","SERVICE_UNAVAILABLE","NOT_CHECKED","ZIP_CODE_NOT_MATCHED_ADDRESS_NOT_CHECKED","ADDRESS_NOT_MATCHED_ZIP_CODE_NOT_CHECKED"]},"cardholderName":{"type":"string"},"token":{"type":"string"},"vaultedCard":{"description":"Vaulted card which can be used for subsequent transactions","$ref":"#/components/schemas/VaultedCard"},"gatewayTxState":{"type":"string","description":"The state as currently recorded. This differs from the legacy 'state' field. The legacy 'state' field is calculated from the 'type' field and whether the transaction was captured.","enum":["INITIATED","INITIATED_ON_AUTH","ACKNOWLEDGED","CONNECT_FAILED","TIMEOUT","FAILED","REVERSE_INITIATED","REVERSE_INITIATED_ON_AUTH","REVERSED","REVERSAL_FAILED","EXTERNAL"]},"currency":{"type":"string","description":"Currency code"},"captured":{"type":"boolean"}}},"Payment":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"order":{"description":"The order with which the payment is associated","$ref":"#/components/schemas/Reference"},"device":{"description":"Device which processed the transaction for this payment, a 128-bit UUID, not a normal base-13 Clover ID.","$ref":"#/components/schemas/Reference"},"tender":{"description":"The tender type associated with this payment, e.g. credit card, cash, etc.","$ref":"#/components/schemas/Tender"},"amount":{"type":"integer","description":"Total amount paid","format":"int64"},"tipAmount":{"type":"integer","description":"Amount paid in tips"},"taxAmount":{"type":"integer","description":"Amount paid in tax"},"cashbackAmount":{"type":"integer","description":"Amount given back in a cash back transaction"},"cashTendered":{"type":"integer","description":"Amount of cash given by the customer"},"externalPaymentId":{"type":"string"},"employee":{"description":"The employee who processed the payment","$ref":"#/components/schemas/Reference"},"createdTime":{"type":"integer","description":"Time payment was recorded on server","format":"int64"},"clientCreatedTime":{"type":"integer","format":"int64"},"modifiedTime":{"type":"integer","description":"Last modified time of the payment","format":"int64"},"offline":{"type":"boolean","default":"false"},"result":{"type":"string","enum":["SUCCESS","FAIL","INITIATED","VOIDED","VOIDING","VOID_FAILED","AUTH","AUTH_COMPLETED","DISCOUNT","OFFLINE_RETRYING","PENDING"]},"cardTransaction":{"description":"Information about the card used for credit/debit card payments","$ref":"#/components/schemas/CardTransaction"},"serviceCharge":{"description":"Amount record as a service charge","$ref":"#/components/schemas/ServiceChargeAmount"},"attributes":{"type":"object","properties":{"default":{"type":"string"}}},"additionalCharges":{"type":"array","items":{"$ref":"#/components/schemas/AdditionalChargeAmount"}},"taxRates":{"type":"array","items":{"$ref":"#/components/schemas/PaymentTaxRate"}},"refunds":{"type":"array","items":{"$ref":"#/components/schemas/Refund"}},"note":{"type":"string"},"lineItemPayments":{"type":"array","items":{"$ref":"#/components/schemas/LineItemPayment"}},"authorization":{"description":"Authorization which this payment is associated to (opening or closing payment) if one exists","$ref":"#/components/schemas/Reference"},"voidPaymentRef":{"description":"If voided, the corresponding successful payment, and vice versa","$ref":"#/components/schemas/Reference"},"voidReason":{"type":"string","description":"If voided, the reason why (when available)","enum":["USER_CANCEL","TRANSPORT_ERROR","REJECT_SIGNATURE","REJECT_PARTIAL_AUTH","NOT_APPROVED","FAILED","AUTH_CLOSED_NEW_CARD","DEVELOPER_PAY_PARTIAL_AUTH","REJECT_DUPLICATE","REJECT_OFFLINE","GIFTCARD_LOAD_FAILED","USER_GIFTCARD_LOAD_CANCEL","DEVELOPER_PAY_TIP_ADJUST_FAILED","USER_CUSTOMER_CANCEL","FRAUD","REJECT_GREATER_APPROVED_AMOUNT"]},"dccInfo":{"description":"Dynamic Currency Conversion information","$ref":"#/components/schemas/DCCInfo"},"transactionSettings":{"description":"Per transaction settings for the payment","$ref":"#/components/schemas/TransactionSettings"},"germanInfo":{"description":"German region-specific information","$ref":"#/components/schemas/GermanInfo"},"appTracking":{"description":"Tracking information for the app that created this payment.","$ref":"#/components/schemas/AppTracking"},"cashAdvanceExtra":{"description":"Information specific to cash advance transactions.","$ref":"#/components/schemas/CashAdvanceExtra"},"transactionInfo":{"description":"Transaction information","$ref":"#/components/schemas/TransactionInfo"},"signatureDisclaimer":{"description":"Information displayed to customer for storing electronic signatures","$ref":"#/components/schemas/SignatureDisclaimer"},"externalReferenceId":{"type":"string","description":"The external reference id if associated with the payment"},"merchant":{"$ref":"#/components/schemas/Reference"},"increments":{"type":"array","items":{"$ref":"#/components/schemas/IncrementalAuthorization"}},"purchaseCardL2":{"description":"Purchase card level 2 data","$ref":"#/components/schemas/PurchaseCardL2"}}},"HoursSet":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Friendly name to describe the hours"},"reference":{"$ref":"#/components/schemas/Reference"},"sunday":{"type":"array","items":{"$ref":"#/components/schemas/HourRange"}},"monday":{"type":"array","items":{"$ref":"#/components/schemas/HourRange"}},"tuesday":{"type":"array","items":{"$ref":"#/components/schemas/HourRange"}},"wednesday":{"type":"array","items":{"$ref":"#/components/schemas/HourRange"}},"thursday":{"type":"array","items":{"$ref":"#/components/schemas/HourRange"}},"friday":{"type":"array","items":{"$ref":"#/components/schemas/HourRange"}},"saturday":{"type":"array","items":{"$ref":"#/components/schemas/HourRange"}}}},"Option":{"required":["name"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Name of the option"},"attribute":{"$ref":"#/components/schemas/Reference"},"items":{"type":"array","description":"Items associated with this option","items":{"$ref":"#/components/schemas/Reference"}}}},"AdditionalChargeAmount":{"type":"object","properties":{"id":{"type":"string","description":"Additional charge id"},"amount":{"type":"integer","description":"Amount of the additional charge","format":"int64"},"rate":{"type":"integer","description":"Percent rate of the additional charge times 10000","format":"int64"},"type":{"type":"string","description":"The type of additional charge","enum":["INTERAC","CREDIT_SURCHARGE","CONVENIENCE_FEE","INTERAC_V2"]}}},"TipSuggestion":{"required":["name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","description":"Name of the tip"},"percentage":{"type":"integer","description":"Suggested tip percentage","format":"int64"},"amount":{"type":"integer","description":"Suggested tip amount","format":"int64"},"isEnabled":{"type":"boolean"}}},"Category":{"required":["name"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"The name of the category which will appear in Clover Register App."},"sortOrder":{"type":"integer","description":"Integer used to determine how this category is sorted against other categories."},"items":{"type":"array","description":"Ordered list of items associated with this category.","items":{"$ref":"#/components/schemas/Reference"}},"deleted":{"type":"boolean","description":"Whether the category has been deleted."},"modifiedTime":{"type":"integer","description":"The time this category was last modified"},"canonical":{"description":"Reference to canonical category","$ref":"#/components/schemas/Reference"}}},"string":{},"ECommTransactionInfo":{"type":"object","properties":{"ecommIndicator":{"type":"string","enum":["ecom","moto"]},"storedCredentials":{"description":"Details about the stored credentials.","$ref":"#/components/schemas/StoredCredentials"}}},"ModifierGroup":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Name of the modifier group"},"alternateName":{"type":"string"},"minRequired":{"type":"integer","description":"The minimum amount of modifiers from this group that must be applied to associated lineItems when using Register"},"maxAllowed":{"type":"integer","description":"The maximum amount of modifiers from this group that can be applied to associated lineItems when using Register"},"showByDefault":{"type":"boolean","description":"Whether employees will be automatically prompted to add modifiers from this category when using Register","default":"true"},"modifiers":{"type":"array","items":{"$ref":"#/components/schemas/Modifier"}},"modifierIds":{"type":"string","description":"An ordered, comma-separated list of modifier ids in this group. (READ ONLY)"},"items":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}},"sortOrder":{"type":"integer","description":"The ordinal value used to determine where in an ordered list this modifier group should appear relative to others."}}},"IdArray":{"type":"object","properties":{"ids":{"type":"array","description":"List of ids","items":{"$ref":"#/components/schemas/Reference"}}}},"HourRange":{"required":["end","start"],"type":"object","properties":{"start":{"type":"integer","format":"int32"},"end":{"type":"integer","format":"int32"}}},"ServiceCharge":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Service charge name"},"enabled":{"type":"boolean","description":"If this service charge is enabled"},"percentage":{"type":"integer","description":"Deprecated use percentageDecimal instead","format":"int64"},"percentageDecimal":{"type":"integer","description":"Percent to charge times 10000, e.g. 12.5% will be 125000","format":"int64"}}},"Credit":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"orderRef":{"description":"The order with which the credit is associated","$ref":"#/components/schemas/Reference"},"device":{"description":"Device which processed this credit, a 128-bit UUID, not a normal base-13 Clover ID.","$ref":"#/components/schemas/Reference"},"tender":{"description":"The tender type associated with this payment, e.g. credit card, cash, etc.","$ref":"#/components/schemas/Tender"},"employee":{"description":"The employee who processed the payment","$ref":"#/components/schemas/Reference"},"customers":{"description":"Customer who received the credit/refund","$ref":"#/components/schemas/Customer"},"amount":{"type":"integer","description":"Amount paid","format":"int64"},"taxAmount":{"type":"integer","description":"Amount paid in tax"},"taxRates":{"type":"array","items":{"$ref":"#/components/schemas/TaxableAmountRate"}},"createdTime":{"type":"integer","description":"Time payment was recorded on server","format":"int64"},"clientCreatedTime":{"type":"integer","format":"int64"},"cardTransaction":{"description":"Information about the card used for credit/debit card payments","$ref":"#/components/schemas/CardTransaction"},"voided":{"type":"boolean"},"voidReason":{"type":"string"},"dccInfo":{"description":"Dynamic Currency Conversion information","$ref":"#/components/schemas/DCCInfo"},"transactionSettings":{"description":"Per transaction settings for the payment","$ref":"#/components/schemas/TransactionSettings"},"creditRefunds":{"type":"array","items":{"$ref":"#/components/schemas/CreditRefund"}},"germanInfo":{"description":"German region-specific information","$ref":"#/components/schemas/GermanInfo"},"appTracking":{"description":"Tracking information for the app that created this credit.","$ref":"#/components/schemas/AppTracking"},"result":{"type":"string","enum":["SUCCESS","FAIL","INITIATED","VOIDED","VOIDING","VOID_FAILED","AUTH","AUTH_COMPLETED","DISCOUNT","OFFLINE_RETRYING","PENDING"]},"transactionInfo":{"description":"Transaction information","$ref":"#/components/schemas/TransactionInfo"},"merchant":{"$ref":"#/components/schemas/Reference"},"externalReferenceId":{"type":"string","description":"The external reference id if associated with the credit"}}},"Gateway":{"type":"object","properties":{"paymentProcessorName":{"type":"string"},"authorizationFrontEnd":{"type":"string"},"acquiringBackEnd":{"type":"string"},"paymentGatewayApi":{"type":"string"},"accountName":{"type":"string"},"altMid":{"type":"string"},"mid":{"type":"string"},"fns":{"type":"string"},"tid":{"type":"string"},"storeId":{"type":"string"},"supportsTipping":{"type":"boolean"},"frontendMid":{"type":"string"},"backendMid":{"type":"string"},"mcc":{"type":"string","description":"Merchant Category Code"},"tokenType":{"type":"string"},"groupId":{"type":"string"},"debitKeyCode":{"type":"string"},"sredCode":{"type":"string"},"supportsTipAdjust":{"type":"boolean"},"supportsNakedCredit":{"type":"boolean"},"supportsMultiPayToken":{"type":"boolean"},"supportsPreauthOverage":{"type":"boolean","description":"If true the gateway will allow an amount greater than the preauth amount to be captured."},"closingTime":{"type":"string"},"newBatchCloseEnabled":{"type":"boolean"},"production":{"type":"boolean","description":"Field to identify whether the payment processor is real or demo. 'true' is returned for real payment processsor. 'false' is returned for demo payment processor."}}},"TaxRate":{"required":["name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"taxType":{"type":"string","description":"to support Argentina's tax type","enum":["VAT_TAXABLE","VAT_NON_TAXABLE","VAT_EXEMPT","INTERNAL_TAX"]},"rate":{"type":"integer","description":"For percentage based discounts like sales tax","format":"int64"},"isDefault":{"type":"boolean"},"items":{"type":"array","description":"Items associated with this tax rate","items":{"$ref":"#/components/schemas/Reference"}},"taxAmount":{"type":"integer","description":"For a flat tax like recycling redemption fee, expressed as number of cents"},"deletedTime":{"type":"integer","description":"Timestamp when tax rate was last deleted"},"modifiedTime":{"type":"integer","description":"Timestamp when tax rate was last modified"}}},"SignatureDisclaimer":{"type":"object","properties":{"disclaimerText":{"type":"string"},"disclaimerValues":{"type":"object","properties":{"default":{"type":"string"}},"description":"Values that will be substituted in standard disclaimer text (txn date/time, account number, product label, etc."}}},"VaultedCard":{"required":["first6","last4"],"type":"object","properties":{"first6":{"type":"string"},"last4":{"type":"string"},"cardholderName":{"type":"string"},"expirationDate":{"type":"string"},"token":{"type":"string"}}},"AppNotification":{"type":"object","properties":{"app":{"description":"The app the notification will be sent to. This will be autopopulated by the server.","$ref":"#/components/schemas/Reference"},"event":{"type":"string","description":""},"timeToLive":{"type":"integer","description":"The time to live of the notification in seconds. By default this is 5 days.","format":"int64"},"data":{"type":"string","description":"Payload of the notification. This is at most 4000 characters."}}},"VoidedItemsChartSummary":{"type":"object","properties":{"hasModifiers":{"type":"boolean","description":"flag to indicate if any line item has modifiers"},"chartData":{"type":"array","description":"revenue classes data","items":{"$ref":"#/components/schemas/VoidedItemsChartData"}},"chartTotals":{"description":"totals of all the chart data","$ref":"#/components/schemas/VoidedItemsChartData"}}},"Modifier":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Name of the modifier"},"alternateName":{"type":"string","description":"Alternate name of the modifier"},"price":{"type":"integer","description":"Additional cost when used","default":"0"},"modifierGroup":{"$ref":"#/components/schemas/Reference"}}},"OrderSubmitRequest":{"type":"object","properties":{"orderCart":{"description":"The order cart to put items, discounts, modifications and order-related information","$ref":"#/components/schemas/OrderCart"}}},"AppMetered":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"amount":{"type":"integer","description":"DEPRECATED: App metered amount. Instead use per country pricing in meteredCountries","format":"int64"},"action":{"type":"string","description":"DEPRECATED: App metered action. Instead use per country pricing in meteredCountries"},"active":{"type":"boolean","description":"DEPRECATED: App metered active status. Instead use per country pricing in meteredCountries"},"meteredCountries":{"type":"array","description":"Metered country options for this app metered","items":{"$ref":"#/components/schemas/AppMeteredCountry"}},"app":{"description":"Reference to the app this metered belongs to","$ref":"#/components/schemas/Reference"},"label":{"type":"string","description":"A label used to identify this metered action"}}},"OptionItem":{"type":"object","properties":{"option":{"description":"Reference to an option","$ref":"#/components/schemas/Reference"},"item":{"description":"Reference to an item","$ref":"#/components/schemas/Reference"}}},"AppMeteredCountry":{"required":["action","amount","country"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"action":{"type":"string","description":"App metered action"},"amount":{"type":"integer","description":"The cost of the metered country","format":"int64"},"country":{"type":"string","description":"The country of the metered country"},"active":{"type":"boolean","description":"App metered country active status"},"appMetered":{"description":"Reference to metered this metered country belongs to","$ref":"#/components/schemas/Reference"},"locales":{"type":"array","description":"List of locale specific metered country resources.","items":{"$ref":"#/components/schemas/Reference"}}}},"OrderCheckoutResponse":{"type":"object","properties":{"orderCart":{"description":"The order cart to put items, discounts, modifications and order-related information","$ref":"#/components/schemas/OrderCart"},"total":{"type":"integer","description":"Total price of the order in cents","format":"int64"},"subtotal":{"type":"integer","description":"Subtotal price of the order in cents","format":"int64"},"totalTaxAmount":{"type":"integer","description":"Amount of the total tax of the order in cents","format":"int64"},"taxSummaries":{"type":"array","items":{"$ref":"#/components/schemas/OrderTaxRate"}},"isVat":{"type":"boolean","description":"If checkout by merchant with VAT enabled","default":"false"}}},"LineItem":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier."},"item":{"description":"A reference to the inventory item that was used to create this line item. Note that since this a reference the item can be changed and deleted any time such that it no longer matches this line item.","$ref":"#/components/schemas/Reference"},"name":{"type":"string","description":"Line item name."},"alternateName":{"type":"string","description":"Alternate name of the line item."},"price":{"type":"integer","description":"Price of the item, typically in cents of merchant currency. When unit quantity is not null then this is the price for a single unit and is not the complete price.","format":"int64"},"priceWithModifiers":{"type":"integer","description":"Price of item after adding all modifications. This is used only for reporting.","format":"int64"},"priceWithModifiersAndItemAndOrderDiscounts":{"type":"integer","description":"Price of item after adding all modifications and subtracting all line item and order level discounts. This is used only for reporting.","format":"int64"},"unitQty":{"type":"integer","description":"Unit quantity if this line item is priced by quantity, or null if the item is not priced by quantity. The value is a fixed-point integer with scaling factor of 1000 (e.g. if charging by ounces then the value should be set to 2500 for 2.5 ounces). To compute the complete price perform the following calculation: PRICE * (UNIT QTY / 1000)."},"unitName":{"type":"string","description":"Unit name (e.g. oz, lb, etc) if priced by unit, otherwise null."},"itemCode":{"type":"string"},"note":{"type":"string"},"printed":{"type":"boolean","description":"True if this line item has been printed out on an order printer at least once already.","default":"false"},"exchangedLineItem":{"$ref":"#/components/schemas/Reference"},"binName":{"type":"string"},"userData":{"type":"string"},"createdTime":{"type":"integer","format":"int64"},"orderClientCreatedTime":{"type":"integer","format":"int64"},"discounts":{"type":"array","description":"List of discounts applied to the line item. Each line item on an order may have zero or more percentage or amount discounts. Line item discounts are separate from order-level discounts (which are applied to the order subtotal).","items":{"$ref":"#/components/schemas/Discount"}},"orderLevelDiscounts":{"type":"array","description":"List of order level discounts attributed to this line item. Amounts are rounded to the nearest penny. This is for reporting purposes only. These rounding approximates are not used when calculating the transaction.","items":{"$ref":"#/components/schemas/Discount"}},"discountAmount":{"type":"integer","description":"Unnamed fixed discount amount in cents. Or, in reporting, this may be the calculated sum of all the line item discounts."},"orderLevelDiscountAmount":{"type":"integer","description":"The calculated sum of order level discounts attributed, approximately to the nearest cent, to this the line item. This is only used in reporting.","format":"int64"},"exchanged":{"type":"boolean","default":"false"},"modifications":{"type":"array","description":"List of references to modifications applied to this line item.","items":{"$ref":"#/components/schemas/Modification"}},"tags":{"type":"array","description":"List of tags associated with this line item.","items":{"$ref":"#/components/schemas/Tag"}},"refunded":{"type":"boolean","description":"True if this line item has been refunded","default":"false"},"refund":{"description":"direct item refund","$ref":"#/components/schemas/Refund"},"isRevenue":{"type":"boolean","description":"True if this item should be counted as revenue, for example gift cards and donations would not.","default":"false"},"taxRates":{"type":"array","description":"Tax rates that apply to this line item","items":{"$ref":"#/components/schemas/TaxRate"}},"payments":{"type":"array","description":"Payments that apply to this line item","items":{"$ref":"#/components/schemas/LineItemPayment"}},"revenueAmount":{"type":"integer","description":"Revenue collected for this. This field is only used in reporting.","format":"int64"},"quantitySold":{"type":"number","description":"Quantity sold for this line item. This field is only used in reporting"},"printGroup":{"description":"Optional reference to the print group that this line item belongs to.","$ref":"#/components/schemas/Reference"}}},"Tender":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"editable":{"type":"boolean","description":"If this merchant tender is editable"},"labelKey":{"type":"string","description":"Label Key"},"label":{"type":"string","description":"Label Key"},"opensCashDrawer":{"type":"boolean","description":"If this tender opens the cash drawer"},"supportsTipping":{"type":"boolean","description":"Allow tipping on payment from tender"},"enabled":{"type":"boolean","description":"If this merchant tender is enabled"},"visible":{"type":"boolean","description":"If this merchant tender is visible"},"instructions":{"type":"string","description":"Label Key"}}},"PaymentTaxRate":{"required":["name","rate","taxableAmount"],"type":"object","properties":{"id":{"type":"string","description":"Tax rate id."},"name":{"type":"string","description":"Tax rate name. This field is optional."},"rate":{"type":"integer","description":"The tax rate. 100% = 1e7.","format":"int64"},"isDefault":{"type":"boolean","description":"Whether the tax rate was configued as a default tax rate at the time that the payment was created."},"taxableAmount":{"type":"integer","description":"The sub-total of line items that the tax was based on. For VAT, this amount includes tax. For all others, this amount does not include tax.","format":"int64"},"isVat":{"type":"boolean","description":"Whether merchant is configured as VAT"},"taxAmount":{"type":"integer","description":"The amount of tax collected. In cases where there are multiple payments for an order then it may be necessary to add an extra cent of tax to the last payment.","format":"int64"}}},"StoredCredentials":{"required":["initiator","is_scheduled","sequence"],"type":"object","properties":{"cardbrand_original_transaction_id":{"type":"string","description":"The transaction id received from schemes for the initial transaction required if sequence is SUBSEQUENT. Note: Mastercard transactions do not use this field for Subsequent transactions."},"sequence":{"type":"string","description":"Whether the transaction is the FIRST or SUBSEQUENT for the same payment card.Valid Note: Mastercard transactions only support SUBSEQUENT transactions for stored credentials feature","enum":["FIRST","SUBSEQUENT"]},"is_scheduled":{"type":"boolean","description":"Whether transaction is scheduled or part of an installment"},"initiator":{"type":"string","description":"Whether it's MERCHANT initiated or explicitly consented by CARDHOLDER.","enum":["MERCHANT","CARDHOLDER"]},"installment_info":{"$ref":"#/components/schemas/InstallmentInfo"}}},"InventoryItems":{"required":["items"],"type":"object","properties":{"items":{"type":"array","description":"Array of inventory items","items":{"$ref":"#/components/schemas/Item"}}}},"SystemOrderType":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"labelKey":{"type":"string","description":"Label Key"},"isQsr":{"type":"boolean","description":"Is for quick service restraunts?"},"isFsr":{"type":"boolean","description":"Is for full service restraunts?"},"isRetail":{"type":"boolean","description":"Is for retail stores?"}}},"TaxRule":{"required":["name"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"Name of Tax Rule"},"merchant":{"description":"The merchant the tax rule belongs to","$ref":"#/components/schemas/Merchant"},"orderType":{"description":"Order Type which to apply the tax rule","$ref":"#/components/schemas/OrderType"},"rates":{"type":"array","description":"Tax rates associated with this rule","items":{"$ref":"#/components/schemas/TaxRate"}},"items":{"type":"array","description":"Items associated with this rule","items":{"$ref":"#/components/schemas/Item"}},"createdTime":{"type":"integer","description":"Timestamp when the tax rule was created","format":"int64"},"modifiedTime":{"type":"integer","description":"Timestamp when the tax rule was last modified","format":"int64"},"deletedTime":{"type":"integer","description":"Timestamp when tax rule was last deleted","format":"int64"}}},"OrderTypeCategory":{"required":["category","orderType"],"type":"object","properties":{"orderType":{"$ref":"#/components/schemas/OrderType"},"category":{"$ref":"#/components/schemas/Category"}}},"AppMeteredEvent":{"required":["appMetered","count"],"type":"object","properties":{"id":{"type":"string"},"appMetered":{"$ref":"#/components/schemas/AppMetered"},"count":{"type":"integer","format":"int64"},"createdTime":{"type":"integer","format":"int64"},"modifiedTime":{"type":"integer","format":"int64"},"charge":{"$ref":"#/components/schemas/Reference"}}},"PrintOrder":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"orderRef":{"description":"Reference to the order to be printed","$ref":"#/components/schemas/Reference"},"deviceRef":{"description":"The printing device. A 128-bit UUID, not a normal base-13 Clover ID.","$ref":"#/components/schemas/Reference"},"category":{"type":"string","description":"The print category","enum":["ORDER","RECEIPT","FISCAL","LABEL"]},"state":{"type":"string","description":"print event state","enum":["CREATED","PRINTING","FAILED","DONE"]},"createdTime":{"type":"integer","description":"Timestamp when the print event was created","format":"int64"},"modifiedTime":{"type":"integer","description":"Timestamp when the print event was last modified","format":"int64"},"deletedTime":{"type":"integer","description":"Timestamp when the print event was last deleted","format":"int64"},"printTime":{"type":"integer","description":"Timestamp when the print event needs to fire to printer","format":"int64"}}},"MerchantPlan":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier"},"name":{"type":"string","description":"The name of the merchant plan"},"description":{"type":"string","description":"Description of the plan"},"price":{"type":"integer","format":"int64"},"trialDays":{"type":"integer","description":"Transient field, the free trial period, as defined in this plan's group.","format":"int64"},"trialExpirationTime":{"type":"integer","description":"Date/time this plan's trial will expire for the merchant with this plan. This is a transient value only applicable to the merchant assigned to this plan.","format":"int64"},"modules":{"type":"array","items":{"$ref":"#/components/schemas/Module"}},"appBundle":{"$ref":"#/components/schemas/AppBundle"},"defaultPlan":{"type":"boolean","description":"If true and multiple plans of this code then treat as default plan for reseller. Cannot use word default."},"recommended":{"type":"boolean","description":"True if plan metadata indicates this plan should be recommended in OOBE plan selection."},"pricingModel":{"type":"string","description":"Pricing model for plan.","enum":["PER_MONTH","PER_DEVICE","TIERED","FREE","SUPPRESSED"]},"bogo":{"type":"boolean","description":"If true then plan offers by one device get one free."},"weight":{"type":"integer","description":"Represents the importance or value the planCode has. Helpful for determining when a merchant is downgrading or upgrading their plan","format":"int64"}}},"CreateLineItemsRequest":{"type":"object","properties":{"items":{"type":"array","description":"List of LineItem objects to create","items":{"$ref":"#/components/schemas/LineItem"}}}},"ItemModifierGroup":{"required":["item","modifierGroup"],"type":"object","properties":{"item":{"$ref":"#/components/schemas/Item"},"modifierGroup":{"$ref":"#/components/schemas/ModifierGroup"}}}},"securitySchemes":{"ApiToken":{"type":"apiKey","name":"access_token","in":"query"}}},"x-explorer-enabled":true,"x-proxy-enabled":true,"x-samples-enabled":true}